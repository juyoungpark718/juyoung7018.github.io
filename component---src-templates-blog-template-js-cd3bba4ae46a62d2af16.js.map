{"version":3,"sources":["webpack:///./src/templates/blogTemplate.js"],"names":["BlogContainer","styled","div","BlogPost","respondTo","md","BlogHeader","BlogTitle","h1","xs","BlogDate","h5","BlogPostContent","lg","BlogPagination","Template","data","pageContext","markdownRemark","frontmatter","html","next","previous","checkMobile","window","outerWidth","matchSquareBracket","word","title","match","others","replace","date","dangerouslySetInnerHTML","__html","to","path","pageQuery"],"mappings":"06BAOA,IAAMA,EAAgBC,IAAOC,IAAV,kFAAGD,CAAH,yEAMbE,EAAWF,IAAOC,IAAV,6EAAGD,CAAH,gHAOVG,IAAUC,GAPA,MAYRC,EAAaL,IAAOC,IAAV,+EAAGD,CAAH,6IAUVM,EAAYN,IAAOO,GAAV,8EAAGP,CAAH,QACXG,IAAUK,GADC,MAMTC,EAAWT,IAAOU,GAAV,6EAAGV,CAAH,MAERW,EAAkBX,IAAOC,IAAV,oFAAGD,CAAH,iEAOjBG,IAAUS,GAPO,MA8BfC,EAAiBb,IAAOC,IAAV,mFAAGD,CAAH,4EAOL,SAASc,EAAT,GAGX,IAFFC,EAEC,EAFDA,KACAC,EACC,EADDA,YAEQC,EAAmBF,EAAnBE,eACAC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACbC,EAAmBJ,EAAnBI,KAAMC,EAAaL,EAAbK,SAERC,EAAc,WAClB,OAAOC,OAAOC,YAAc,KAGxBC,EAAqB,WAEzB,GAAIH,EAAa,CACf,IAAMI,EAAOR,EAAYS,MAAMC,MAFlB,aAIb,GAAIF,EAAM,CACR,IAAMG,EAASX,EAAYS,MAAMG,QAAQJ,EAAK,GAAI,IAClD,MAAO,CAAEA,KAAMA,EAAK,GAAIG,UACnB,MAAO,CAAEH,KAAM,KAAMG,OAAQX,EAAYS,OAEhD,OAAOT,EAAYS,OAGvB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQA,MAAOT,EAAYS,QAC3B,kBAAC5B,EAAD,KACE,kBAACG,EAAD,KACE,kBAACG,EAAD,KACE,kBAACC,EAAD,KACGmB,IACCA,IAAqBC,KACnB,oCACE,6BAAMD,IAAqBC,MAC3B,6BAAMD,IAAqBI,SAG7BJ,IAAqBI,OAGvBJ,KAGJ,kBAAChB,EAAD,KAAWS,EAAYa,OAEzB,kBAACpB,EAAD,CAAiBqB,wBAAyB,CAAEC,OAAQd,KACpD,kBAACN,EAAD,KACGQ,EACC,kBAAC,OAAD,CAAMa,GAAIb,EAASH,YAAYiB,MAA/B,MACSd,EAASH,YAAYS,OAG9B,+BAEDP,EACC,kBAAC,OAAD,CACEc,GAAId,EAAKF,YAAYiB,MAClBf,EAAKF,YAAYS,MAFtB,OAIA,mCASP,IAAMS,EAAS","file":"component---src-templates-blog-template-js-cd3bba4ae46a62d2af16.js","sourcesContent":["import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport styled from \"styled-components\";\nimport Layout from \"../components/layout\";\nimport { respondTo } from \"../components/shared/_respondTo\";\nimport { Helmet } from \"react-helmet\";\n\nconst BlogContainer = styled.div`\n  max-width: 100%;\n  box-shadow: 1px 1px 15px 0 #cfcfcf;\n  border-radius: 5px;\n`;\n\nconst BlogPost = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 1024px;\n  margin: 0 auto;\n  ${respondTo.md`\n    width:100%;\n  `}\n`;\n\nconst BlogHeader = styled.div`\n  width: 100%;\n  border-bottom: 1px solid #cfcfcf;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 2rem 0;\n`;\n\nconst BlogTitle = styled.h1`\n  ${respondTo.xs`\n    font-size:1.5rem;\n  `}\n`;\n\nconst BlogDate = styled.h5``;\n\nconst BlogPostContent = styled.div`\n  padding-top: 2rem;\n  width: 960px;\n  blockquote {\n    line-height: 1.7;\n  }\n\n  ${respondTo.lg`\n    font-weight:500;\n    min-width:0;\n    max-width:100%;\n    blockquote{ \n      width:100%;\n      margin:0;\n      padding:1.5rem 2rem;\n      word-break: keep-all;\n      overflow-wrap: break-word;\n      line-height:1.7\n    }\n    table{\n      display:block;\n      width:100%;\n      overflow-x:scroll;\n      *{\n        // white-space:nowrap;\n      }\n    }\n  `}\n`;\n\nconst BlogPagination = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  margin-top: 3rem;\n`;\n\nexport default function Template({\n  data,\n  pageContext, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data; // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark;\n  const { next, previous } = pageContext;\n\n  const checkMobile = () => {\n    return window.outerWidth <= 480 ? true : false;\n  };\n\n  const matchSquareBracket = () => {\n    const regExp = /\\[(.*?)\\]/;\n    if (checkMobile) {\n      const word = frontmatter.title.match(regExp);\n\n      if (word) {\n        const others = frontmatter.title.replace(word[0], \"\");\n        return { word: word[0], others };\n      } else return { word: null, others: frontmatter.title };\n    } else {\n      return frontmatter.title;\n    }\n  };\n  return (\n    <Layout>\n      <Helmet title={frontmatter.title} />\n      <BlogContainer>\n        <BlogPost>\n          <BlogHeader>\n            <BlogTitle>\n              {matchSquareBracket() ? (\n                matchSquareBracket().word ? (\n                  <>\n                    <div>{matchSquareBracket().word}</div>\n                    <div>{matchSquareBracket().others}</div>\n                  </>\n                ) : (\n                  matchSquareBracket().others\n                )\n              ) : (\n                matchSquareBracket()\n              )}\n            </BlogTitle>\n            <BlogDate>{frontmatter.date}</BlogDate>\n          </BlogHeader>\n          <BlogPostContent dangerouslySetInnerHTML={{ __html: html }} />\n          <BlogPagination>\n            {previous ? (\n              <Link to={previous.frontmatter.path}>\n                {`<- ${previous.frontmatter.title}`}\n              </Link>\n            ) : (\n              <span></span>\n            )}\n            {next ? (\n              <Link\n                to={next.frontmatter.path}\n              >{`${next.frontmatter.title} ->`}</Link>\n            ) : (\n              <span></span>\n            )}\n          </BlogPagination>\n        </BlogPost>\n      </BlogContainer>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"YYYY년 MM월 DD일, HH:mm\")\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}