{"componentChunkName":"component---src-templates-blog-template-js","path":"/posts/123","result":{"data":{"markdownRemark":{"html":"<h2>광고 삽입</h2>\n<h3>문제 풀이</h3>\n<p>누적합을 이용해서 푸는 문제이다.\n문제에서 주어진 playtime은 100시간을 넘지 않으므로 100시간을 초로 바꾸면 360000초 배열로 둘 수 있다.\n배열로 두고 배열의 각 인덱스는 1초를 가리키므로 해당 구간의 재생시간을 구하면 된다.</p>\n<ol>\n<li>주어진 logs 배열로 totalTime을 초기화 시킨다.\n<ol>\n<li>시청자들의 시청 시간을 초로 바꾼다.</li>\n<li>시작시간에는 +1을 해준다.</li>\n<li>끝나는 시간엔 -1을 해준다.</li>\n</ol>\n</li>\n<li>totalTime[i] += totalTime[i-1]을 playtime까지 for문을 돌려준다.\n<ol>\n<li>logs배열로 시청자들의 재생 시작 시간, 재생 끝나는 시간을 표시했으므로 totalTime[i] += totalTime[i-1]을 돌리면 해당 구간에서 재생한 시청자 수가 나온다.\n<pre>\n   totalTime이 아래와 같이 된 경우 for문을 돌리게 되면,\n   index 0 1 2 3 4 5  6  7 8 9  10\n   value 0 0 1 0 1 0 -1  0 0 0  -1\n\n   index 0 1 2 3 4 5  6  7 8 9  10\n   value 0 0 1 1 2 2  1  1 1 1   0\n   위와 같이 해당 초 구간을 재생한 시청자들을 알게 된다.\n</pre>\n</li>\n</ol>\n</li>\n<li>한번 더 totalTime[i] += totalTime[i-1]을 playtime까지 for문을 돌려준다.(누적합)\n<ol>\n<li>광고 구간에 대한 누적 재생시간을 알기 위해서 for문을 한번 더 돌린다.</li>\n</ol>\n</li>\n<li>구한 누적합을 바탕으로, 0<del>playtime-adtime까지 for문을 돌리면서, i</del>adTime+i을 광고 구간으로 두고 누적합이 가장 큰 경우를 찾으면 된다.</li>\n</ol>\n<h4>구한 시작 지점에 +1를 하는 이유?</h4>\n<pre>\n    시청자들의 재생 시작 시간, 재생 끝나는 시간을 표시한 배열(logs를 for문)\n    index 0 1 2 3 4 5  6  7 8 9  10\n    value 0 0 1 0 1 0 -1  0 0 0  -1\n\n    각 구간의 시청자들의 재생 횟수를 표시한 배열(totalTime[i] += totalTime[i-1]를 for문)\n    index 0 1 2 3 4 5  6  7 8 9  10\n    value 0 0 1 1 2 2  1  1 1 1   0\n\n    구간까지의 누적합 배열(totalTime[i] += totalTime[i-1]를 for문)\n    index 0 1 2 3 4 5  6  7 8 9  10 11\n    value 0 0 1 2 4 6  7  8 9 10 10 10\n\n    겹쳐진 재생시간보다 광고 시간이 작을때는(여기서는 4초라고 하자)\n    totalTime[adTime+i] - totalTime[i]의 값을 구하는 것이니까\n    1~5인 경우도 6으로 최댓값이라고 볼 수 있다. 하지만 재생 시간의 시작은 2초이므로 +1를 해줘야한다.\n    그래서 생각해본 경우들은 1씩 차이가 나는 부분이 연속된다고 하면 시청자가 재생하기 전의 시간인 0을 시작지점으로 잡아서 +1을 해줘야하는 것 같다.\n</pre>\n<h3>소스 코드</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getTime</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">time</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>hour<span class=\"token punctuation\">,</span> minute<span class=\"token punctuation\">,</span> second<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>hour<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3600</span> <span class=\"token operator\">+</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>minute<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">60</span> <span class=\"token operator\">+</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>second<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">padZero2</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">time</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">padStart</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">convert</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">time</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> hour <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>time <span class=\"token operator\">/</span> <span class=\"token number\">3600</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> minute <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>time <span class=\"token operator\">%</span> <span class=\"token number\">3600</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> second <span class=\"token operator\">=</span> time <span class=\"token operator\">-</span> hour<span class=\"token operator\">*</span><span class=\"token number\">3600</span> <span class=\"token operator\">-</span> minute<span class=\"token operator\">*</span><span class=\"token number\">60</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">padZero2</span><span class=\"token punctuation\">(</span>hour<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">padZero2</span><span class=\"token punctuation\">(</span>minute<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">padZero2</span><span class=\"token punctuation\">(</span>second<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">play_time<span class=\"token punctuation\">,</span> adv_time<span class=\"token punctuation\">,</span> logs</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> totalTime <span class=\"token operator\">=</span> <span class=\"token function\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">360000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> adTime <span class=\"token operator\">=</span> <span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span>adv_time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> playTime <span class=\"token operator\">=</span> <span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span>play_time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>logs<span class=\"token punctuation\">.</span>length <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> logs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        totalTime<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        totalTime<span class=\"token punctuation\">[</span>end<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>playTime <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        totalTime<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> totalTime<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>playTime <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        totalTime<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> totalTime<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">let</span> max <span class=\"token operator\">=</span> totalTime<span class=\"token punctuation\">[</span>adTime<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> start <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>playTime<span class=\"token operator\">-</span>adTime <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>totalTime<span class=\"token punctuation\">[</span>adTime<span class=\"token operator\">+</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> totalTime<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            max <span class=\"token operator\">=</span> totalTime<span class=\"token punctuation\">[</span>adTime<span class=\"token operator\">+</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> totalTime<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            start <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">return</span> start <span class=\"token operator\">!==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token function\">convert</span><span class=\"token punctuation\">(</span>start<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">convert</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","frontmatter":{"title":"[프로그래머스] 레벨3 (level3) 광고 삽입","date":"2021년 03월 11일, 08:00"}}},"pageContext":{"slug":"/13/post123/","previous":{"fields":{"slug":"/13/post122/"},"frontmatter":{"title":"[함수형 프로그래밍] - 모나드","path":"/posts/122"}},"next":{"fields":{"slug":"/13/post124/"},"frontmatter":{"title":"[프로그래머스] 레벨3 (level3) 메뉴 리뉴얼","path":"/posts/124"}}}}}