{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/posts/137/","result":{"data":{"markdownRemark":{"html":"<h2>특정한 최단 경로</h2>\n<h3>문제풀이</h3>\n<ul>\n<li>\n<p>다익스트라를 이용하여 풀었다.</p>\n</li>\n<li>\n<p>특정한 두 점을 지나는 최단경로이기 때문에 시작정점으로부터 특정한 두 점까지의 최단거리를 구한다.</p>\n</li>\n<li>\n<p>각 구한 최단거리에서 특정한 두 점 사이의 거리를 구한다.</p>\n</li>\n<li>\n<p>마지막 N 번째 점 까지의 거리를 구한 후 두 가지 경우에 대해서 가장 작은 값이 최단거리이다.</p>\n</li>\n</ul>\n<h3>소스코드</h3>\n<pre><code class=\"language-js\">const log = console.log;\nconst fs = require(\"fs\");\nconst input = fs.readFileSync(\"/dev/stdin\").toString().trim().split(\"\\n\");\n// const input = fs.readFileSync(\"./stdin\").toString().trim().split(\"\\n\");\n\nclass Heap { /* 구현 내용은 생략 */ }\n\nconst [N, E] = input[0].split(\" \").map((e) => +e);\nconst adj = Array.from(Array(N + 1), () => Array(N + 1).fill(Infinity));\ninput.slice(1, E + 1).map((e) => {\n  const [start, end, cost] = e.split(\" \").map((el) => +el);\n  adj[start][end] = cost;\n  adj[end][start] = cost;\n});\nconst [v1, v2] = input[input.length - 1].split(\" \").map((e) => +e);\n\nconst getMinCost = (start, end) => {\n  const queue = new Heap();\n  const visited = Array(N + 1).fill(false);\n  queue.add([start, 0]);\n  while (queue.size()) {\n    const [start, cost] = queue.pop();\n    if (start === end) return cost;\n    visited[start] = true;\n    for (let i = 1; i &#x3C; adj[start].length; i++) {\n      const [v, c] = [i, adj[start][i]];\n      if (!visited[v] &#x26;&#x26; adj[start][i] !== Infinity) queue.add([v, cost + c]);\n    }\n  }\n  return Infinity;\n};\n\nconst cost1 = getMinCost(1, v1) + getMinCost(v1, v2) + getMinCost(v2, N);\nconst cost2 = getMinCost(1, v2) + getMinCost(v2, v1) + getMinCost(v1, N);\n\nif (Math.min(cost1, cost2) === Infinity) {\n  log(-1);\n  return;\n}\nlog(Math.min(cost1, cost2));\n</code></pre>","frontmatter":{"title":"[백준] 1504번 특정한 최단경로","date":"2021년 04월 24일, 08:51"}}},"pageContext":{"slug":"/14/post137/","previous":{"fields":{"slug":"/14/post136/"},"frontmatter":{"title":"[프로그래머스] 모두 0으로 만들기","path":"/posts/136"}},"next":{"fields":{"slug":"/14/post138/"},"frontmatter":{"title":"[아티클럽] 리액트 useEffect에 대해서 그리고 4가지 팁","path":"/posts/138"}}}},"staticQueryHashes":["3649515864"],"slicesMap":{}}