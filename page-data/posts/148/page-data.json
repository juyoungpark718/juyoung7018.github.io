{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/posts/148/","result":{"data":{"markdownRemark":{"html":"<h3>문자열 폭발</h3>\n<ul>\n<li><a href=\"https://www.acmicpc.net/problem/9935\">https://www.acmicpc.net/problem/9935</a></li>\n</ul>\n<h3>문제 풀이</h3>\n<p>스택을 이용해서 푸는 문제이다.<br>\npop을 계속한다면 느려질거 같아서 index를 두고 덮어씌우는 방식으로 했다.<br>\n그리고 마지막에는 index가 stack의 길이니까 index만큼 stack에서 slice를 해서 join을 통해 문자열을 만들었다.</p>\n<h3>소스코드</h3>\n<pre><code class=\"language-js\">const log = console.log;\nconst fs = require(\"fs\");\nconst input = fs.readFileSync(\"/dev/stdin\").toString().trim().split(\"\\n\");\n// const input = fs.readFileSync(\"./stdin\").toString().trim().split(\"\\n\");\n\nconst str = input[0];\nconst boom = input[1];\nconst boomLen = boom.length;\nconst stack = [];\nlet index = 0;\n\nconst checkBoom = () => {\n  if(index &#x3C; boomLen) return;\n  let check = true;\n  let j = 1\n  for(let i=boomLen-1 ; i>=0 ; i--){\n    if(boom[i] === stack[index-j]){\n      j++;\n      continue;\n    }\n    check = false;\n    break;\n  }\n  return check;\n}\n\nfor(let i=0 ; i&#x3C;str.length ; i++){\n  stack[index++] = str[i];\n  if(checkBoom()){\n    index -= boomLen;\n    continue;\n  }\n}\nlet result = stack.slice(0, index).join(\"\");\nlog(result === '' ? 'FRULA' : result);\n</code></pre>","frontmatter":{"title":"[백준] 9935번 문자열 폭발","date":"2021년 06월 14일, 23:08"}}},"pageContext":{"slug":"/15/post148/","previous":{"fields":{"slug":"/15/post147/"},"frontmatter":{"title":"[아티클럽] 자바스크립트 TDZ","path":"/posts/147"}},"next":{"fields":{"slug":"/15/post149/"},"frontmatter":{"title":"[CSS] Cascading Style Sheet","path":"/posts/149"}}}},"staticQueryHashes":["3649515864"],"slicesMap":{}}