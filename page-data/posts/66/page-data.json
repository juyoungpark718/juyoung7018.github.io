{"componentChunkName":"component---src-templates-blog-template-js","path":"/posts/66","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<h2>셔틀 버스</h2>\n<h3>문제 설명</h3>\n<p>카카오에서는 무료 셔틀버스를 운행하기 때문에 판교역에서 편하게 사무실로 올 수 있다. 카카오의 직원은 서로를 '크루'라고 부르는데, 아침마다 많은 크루들이 이 셔틀을 이용하여 출근한다.</p>\n<p>이 문제에서는 편의를 위해 셔틀은 다음과 같은 규칙으로 운행한다고 가정하자.</p>\n<ul>\n<li>셔틀은 09:00부터 총 n회 t분 간격으로 역에 도착하며, 하나의 셔틀에는 최대 m명의 승객이 탈 수 있다.</li>\n<li>셔틀은 도착했을 때 도착한 순간에 대기열에 선 크루까지 포함해서 대기 순서대로 태우고 바로 출발한다. 예를 들어 09:00에 도착한 셔틀은 자리가 있다면 09:00에 줄을 선 크루도 탈 수 있다.</li>\n</ul>\n<p>일찍 나와서 셔틀을 기다리는 것이 귀찮았던 콘은, 일주일간의 집요한 관찰 끝에 어떤 크루가 몇 시에 셔틀 대기열에 도착하는지 알아냈다. 콘이 셔틀을 타고 사무실로 갈 수 있는 도착 시각 중 제일 늦은 시각을 구하여라.</p>\n<p>단, 콘은 게으르기 때문에 같은 시각에 도착한 크루 중 대기열에서 제일 뒤에 선다. 또한, 모든 크루는 잠을 자야 하므로 23:59에 집에 돌아간다. 따라서 어떤 크루도 다음날 셔틀을 타는 일은 없다.</p>\n<p><strong><em>입력 형식</em></strong></p>\n<p>셔틀 운행 횟수 n, 셔틀 운행 간격 t, 한 셔틀에 탈 수 있는 최대 크루 수 m, 크루가 대기열에 도착하는 시각을 모은 배열 timetable이 입력으로 주어진다.</p>\n<ul>\n<li><code class=\"language-text\">0 ＜ n ≦ 10</code></li>\n<li><code class=\"language-text\">0 ＜ t ≦ 60</code></li>\n<li><code class=\"language-text\">0 ＜ m ≦ 45</code></li>\n<li>timetable은 최소 길이 1이고 최대 길이 2000인 배열로, 하루 동안 크루가 대기열에 도착하는 시각이 HH:MM 형식으로 이루어져 있다.</li>\n<li>크루의 도착 시각 HH:MM은 00:01에서 23:59 사이이다.</li>\n</ul>\n<p><strong><em>출력 형식</em></strong></p>\n<p>콘이 무사히 셔틀을 타고 사무실로 갈 수 있는 제일 늦은 도착 시각을 출력한다. 도착 시각은 HH:MM 형식이며, 00:00에서 23:59 사이의 값이 될 수 있다.</p>\n<p><strong><em>입출력 예제</em></strong></p>\n<table>\n<thead>\n<tr>\n<th>n</th>\n<th>t</th>\n<th>m</th>\n<th>timetable</th>\n<th>answer</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>5</td>\n<td>[08:00, 08:01, 08:02, 08:03]</td>\n<td>09:00</td>\n</tr>\n<tr>\n<td>2</td>\n<td>10</td>\n<td>2</td>\n<td>[09:10, 09:09, 08:00]</td>\n<td>09:09</td>\n</tr>\n<tr>\n<td>2</td>\n<td>1</td>\n<td>2</td>\n<td>[09:00, 09:00, 09:00, 09:00]</td>\n<td>08:59</td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>5</td>\n<td>[00:01, 00:01, 00:01, 00:01, 00:01]</td>\n<td>00:00</td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>[23:59 ]</td>\n<td>09:00</td>\n</tr>\n<tr>\n<td>10</td>\n<td>60</td>\n<td>45</td>\n<td>[23:59,23:59, 23:59, 23:59, 23:59, 23:59, 23:59, 23:59, 23:59, 23:59, 23:59, 23:59, 23:59, 23:59, 23:59, 23:59]</td>\n<td>18:00</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<h3>문제 풀이</h3>\n<ol>\n<li>시작 시간은 9시 이므로 60을 곱한 540을 start로 선언.</li>\n<li>timetable의 시간들을 다 분으로 계산해줌(time function) => <strong>여기서 time 함수에서 24:00는 23:59로 처리해줘야함.</strong></li>\n<li>table(time함수의 리턴값)을 오름차순으로 정렬.</li>\n<li>n이 0이 될 때까지 줄인다.</li>\n<li>n === 1일 때,\n<ol>\n<li>타는 인원의 숫자가 m보다 작을 때는 start를 시간 HH:mm으로 바꿔서 리턴.</li>\n<li>그렇지 않는 경우 탑승 인원의 m번째 인원보다 1분 작게 하고 리턴.</li>\n</ol>\n</li>\n<li>탈수 있는 인원이 m보다 많다면, m만큼만 제거. 아니면 탈 수 있는 인원만 table에서 제거.</li>\n<li>n을 줄여준다.</li>\n<li>start는 t만큼 증가시켜줌.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">let</span> start <span class=\"token operator\">=</span> <span class=\"token number\">540</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">,</span> timetable</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> answer <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> table <span class=\"token operator\">=</span> <span class=\"token function\">time</span><span class=\"token punctuation\">(</span>timetable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  table<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> canRide <span class=\"token operator\">=</span> table<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> e <span class=\"token operator\">&lt;=</span> start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>canRide<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>canRide<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">stringTime</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token function\">stringTime</span><span class=\"token punctuation\">(</span>canRide<span class=\"token punctuation\">[</span>m <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">stringTime</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>canRide<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        table<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      table <span class=\"token operator\">=</span> table<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> e <span class=\"token operator\">></span> start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    n<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n    start <span class=\"token operator\">+=</span> t<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">timeTable</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> timeTable<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>time<span class=\"token punctuation\">,</span> minute<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> total <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>time <span class=\"token operator\">*</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>minute<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> total <span class=\"token operator\">===</span> <span class=\"token number\">1440</span> <span class=\"token operator\">?</span> <span class=\"token number\">1439</span> <span class=\"token operator\">:</span> total<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">stringTime</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">total</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> time <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>total <span class=\"token operator\">/</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> minute <span class=\"token operator\">=</span> total <span class=\"token operator\">%</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span>\n  time <span class=\"token operator\">=</span> time <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"0\"</span> <span class=\"token operator\">+</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  minute <span class=\"token operator\">=</span> minute <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"0\"</span> <span class=\"token operator\">+</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>minute<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>minute<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> time <span class=\"token operator\">+</span> <span class=\"token string\">\":\"</span> <span class=\"token operator\">+</span> minute<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","frontmatter":{"title":"[프로그래머스] 레벨3 (level3) 셔틀 버스","date":"2020년 07월 06일, 15:20"}}},"pageContext":{"slug":"/7/post66/","previous":{"fields":{"slug":"/7/post65/"},"frontmatter":{"title":"[프로그래머스] 레벨3 (level3) 경주로 건설","path":"/posts/65"}},"next":{"fields":{"slug":"/7/post67/"},"frontmatter":{"title":"[프로그래머스] 레벨3 (level3) 길찾기 게임","path":"/posts/67"}}}},"staticQueryHashes":["1791144535","3649515864"]}