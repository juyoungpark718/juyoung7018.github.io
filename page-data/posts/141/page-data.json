{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/posts/141/","result":{"data":{"markdownRemark":{"html":"<h2>트리의 지름</h2>\n<ul>\n<li><a href=\"https://www.acmicpc.net/problem/1967\">https://www.acmicpc.net/problem/1967</a></li>\n</ul>\n<h3>문제풀이</h3>\n<p>dfs를 이용해서 풀었다.<br>\n특정 한 점에서 가장 먼 지점까지 가면, 그 가장 먼 지점은 원의 지름을 만드는 점 중 하나이다.<br>\n그래서 dfs로 지름의 한 점을 구하고, 구한 점으로부터 또 가장 먼 거리를 구하면 트리의 지름이 된다.</p>\n<p><strong>조심! 자바스크립트로 풀었는데, 재귀함수로 풀면 터진다.</strong></p>\n<h3>소스코드</h3>\n<pre><code class=\"language-js\">const log = console.log;\nconst fs = require(\"fs\");\nconst input = fs.readFileSync(\"/dev/stdin\").toString().trim().split(\"\\n\");\n// const input = fs.readFileSync(\"./stdin\").toString().trim().split(\"\\n\");\n\nconst N = +input[0];\nconst adj = Array.from(Array(N + 1), () => Array());\ninput.slice(1, N + 1).map((e) => {\n  const [parent, child, cost] = e.split(\" \").map((el) => +el);\n  adj[parent].push([child, cost]);\n  adj[child].push([parent, cost]);\n});\n\nconst dfs = (start) => {\n  const visited = Array(N + 1);\n  const stack = [[start, 0]];\n  let vertex = 0;\n  let max = 0;\n  while (stack.length) {\n    const [start, total] = stack.pop();\n    if (visited[start]) continue;\n    const edges = adj[start];\n    visited[start] = true;\n    if (max &#x3C; total) {\n      max = total;\n      vertex = start;\n    }\n    for (let i = 0; i &#x3C; edges.length; i++) {\n      const [next, cost] = edges[i];\n      stack.push([next, total + cost]);\n    }\n  }\n  return { vertex, max };\n};\n\nif (N === 1) {\n  log(0);\n  return;\n}\nlog(dfs(dfs(1).vertex).max);\n\n</code></pre>","frontmatter":{"title":"[백준] 1967번 트리의 지름","date":"2021년 05월 12일, 13:38"}}},"pageContext":{"slug":"/15/post141/","previous":{"fields":{"slug":"/14/post140/"},"frontmatter":{"title":"[아티클럽] React.memo() 현명하게 사용하기를 읽고","path":"/posts/140"}},"next":{"fields":{"slug":"/15/post142/"},"frontmatter":{"title":"[아티클럽] 올해 버려야 할 타입스크립트 나쁜 버릇 10가지를 읽고","path":"/posts/142"}}}},"staticQueryHashes":["3649515864"],"slicesMap":{}}