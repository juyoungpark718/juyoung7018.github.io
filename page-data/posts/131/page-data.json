{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/posts/131/","result":{"data":{"markdownRemark":{"html":"<h2>타임머신</h2>\n<h3>벨만포드</h3>\n<ul>\n<li>음수 가중치인 경우에 사용 가능하고(방향이 존재), 음수 사이클이 없다는 존재 하에 한 정점에서 다른 정점까지의 최단 거리를 구할 수 있는 알고리즘</li>\n<li>모든 정점을 방문하면서 최단거리로 갱신</li>\n<li>음의 사이클이 없는 경우 다시 간선들에 대해서 최단거리를 구하면 거리에 대한 갱신이 이루어지지 않음</li>\n</ul>\n<h3>문제풀이</h3>\n<ul>\n<li>각 정점들의 최단거리를 구함.</li>\n<li>최단거리를 구한 후 다시 한번더 간선들에 대해서 루프를 돌림(음의 가중치가 있는지 판단)</li>\n</ul>\n<h3>소스코드</h3>\n<pre><code class=\"language-js\">const log = console.log;\nconst fs = require(\"fs\");\nconst input = fs.readFileSync(\"/dev/stdin\").toString().trim().split(\"\\n\");\n// const input = fs.readFileSync(\"./stdin\").toString().trim().split(\"\\n\");\n\nconst [N, M] = input[0].split(\" \").map(e => +e);\nconst paths = input.slice(1, M+1).map(e => e.split(\" \").map(el => +el));\nconst visited = Array(N+1).fill(Infinity);\nvisited[1] = 0;\n\nfor(let i=1 ; i&#x3C;=N ; i++){\n  for(let j=0 ; j&#x3C;paths.length ; j++){\n    const [start, end, cost] = paths[j];\n    if(visited[start] === Infinity) continue;\n    const d = visited[start] + cost;\n    if(visited[end] > d) visited[end] = d;\n  }\n}\n\nfor(let i=0 ; i&#x3C;paths.length ; i++){\n  const [start, end, cost] = paths[i];\n  if(visited[start] === Infinity) continue;\n  const d = visited[start] + cost;\n  if(visited[end] > d){\n    log(-1);\n    return;\n  }\n}\n\nfor(let i=2 ; i&#x3C;visited.length ; i++){\n  visited[i] !== Infinity ? log(visited[i]) : log(-1);\n}\n</code></pre>\n<h3>참고</h3>\n<ul>\n<li>벨만포드(<a href=\"https://cloge.tistory.com/27\">https://cloge.tistory.com/27</a>)</li>\n</ul>","frontmatter":{"title":"[백준] 11657번 타임머신","date":"2021년 04월 03일, 09:00"}}},"pageContext":{"slug":"/14/post131/","previous":{"fields":{"slug":"/14/post130/"},"frontmatter":{"title":"[자료구조] B+ 트리","path":"/posts/130"}},"next":{"fields":{"slug":"/14/post132/"},"frontmatter":{"title":"[백준] 1107번 리모컨","path":"/posts/132"}}}},"staticQueryHashes":["3649515864"],"slicesMap":{}}