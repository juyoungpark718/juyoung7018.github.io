{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/posts/133/","result":{"data":{"markdownRemark":{"html":"<h2>치킨배달</h2>\n<h3>문제풀이</h3>\n<p>모든 경우에 대해서 선택하는 문제이다. 폐업시키지 않을 치킨집의 갯수만큼 모든 경우의 수를 만들고 치킨 거리의 최솟값을 구하면 된다.</p>\n<h3>소스코드</h3>\n<pre><code class=\"language-js\">const log = console.log;\nconst fs = require(\"fs\");\nconst input = fs.readFileSync(\"/dev/stdin\").toString().trim().split(\"\\n\");\n// const input = fs.readFileSync(\"./stdin\").toString().trim().split(\"\\n\");\n\nconst [N, M] = input[0].split(\" \").map(e => +e);\nconst chickens = [];\nconst houses = [];\nconst map = input.slice(1, N+1).map((e, row) => e.split(\" \").map((el, col) => {\n  if(+el === 1) houses.push([row, col]);\n  if(+el === 2) chickens.push([row, col]);\n  return +el\n}));\n\nconst getDistance = (point1, point2) => Math.abs(point1[0] - point2[0]) + Math.abs(point1[1] - point2[1]);\nconst selected = [];\nlet result = Infinity;\nconst dfs = (index, count) => {\n  if(count === M){\n    result = Math.min(result, houses.map(hou => Math.min(...selected.map(chic => getDistance(chic, hou)))).reduce((a,b) => a+b, 0));\n    return;\n  }\n\n  for(let i=index ; i&#x3C;chickens.length ; i++){\n    selected.push(chickens[i]);\n    dfs(i+1, count+1);\n    selected.pop();\n  }\n}\ndfs(0, 0);\nlog(result);\n\n</code></pre>","frontmatter":{"title":"[백준] 15686번 치킨배달","date":"2021년 04월 14일, 20:20"}}},"pageContext":{"slug":"/14/post133/","previous":{"fields":{"slug":"/14/post132/"},"frontmatter":{"title":"[백준] 1107번 리모컨","path":"/posts/132"}},"next":{"fields":{"slug":"/14/post134/"},"frontmatter":{"title":"[백준] 1167번 트리의 지름","path":"/posts/134"}}}},"staticQueryHashes":["3649515864"],"slicesMap":{}}