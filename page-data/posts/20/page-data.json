{"componentChunkName":"component---src-templates-blog-template-js","path":"/posts/20","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<h2>예상 대진표</h2>\n<h3>문제 설명</h3>\n<p>△△ 게임대회가 개최되었습니다. 이 대회는 N명이 참가하고, 토너먼트 형식으로 진행됩니다. N명의 참가자는 각각 1부터 N번을 차례대로 배정받습니다. 그리고, 1번↔2번, 3번↔4번, ... , N-1번↔N번의 참가자끼리 게임을 진행합니다. 각 게임에서 이긴 사람은 다음 라운드에 진출할 수 있습니다. 이때, 다음 라운드에 진출할 참가자의 번호는 다시 1번부터 N/2번을 차례대로 배정받습니다. 만약 1번↔2번 끼리 겨루는 게임에서 2번이 승리했다면 다음 라운드에서 1번을 부여받고, 3번↔4번에서 겨루는 게임에서 3번이 승리했다면 다음 라운드에서 2번을 부여받게 됩니다. 게임은 최종 한 명이 남을 때까지 진행됩니다.</p>\n<p>이때, 처음 라운드에서 A번을 가진 참가자는 경쟁자로 생각하는 B번 참가자와 몇 번째 라운드에서 만나는지 궁금해졌습니다. 게임 참가자 수 N, 참가자 번호 A, 경쟁자 번호 B가 함수 solution의 매개변수로 주어질 때, 처음 라운드에서 A번을 가진 참가자는 경쟁자로 생각하는 B번 참가자와 몇 번째 라운드에서 만나는지 return 하는 solution 함수를 완성해 주세요. 단, A번 참가자와 B번 참가자는 서로 붙게 되기 전까지 항상 이긴다고 가정합니다.</p>\n<p><strong><em>제한사항</em></strong></p>\n<ul>\n<li>N : 2^1 이상 2^20 이하인 자연수 (2의 지수 승으로 주어지므로 부전승은 발생하지 않습니다.)</li>\n<li>A, B : N 이하인 자연수 (단, A ≠ B 입니다.)</li>\n</ul>\n<p><strong><em>입출력 예</em></strong></p>\n<table>\n<thead>\n<tr>\n<th>N</th>\n<th>A</th>\n<th>B</th>\n<th>answer</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>8</td>\n<td>4</td>\n<td>7</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<h2>문제풀이</h2>\n<p>N의 크기가 2의 거듭제곱이고, 2로 나눴을때 A&#x3C;N&#x3C;B이면, A와 B는 N을 2로 1까지 나는 횟수라고 생각하면 된다.<br>\n따라서, N을 계속 반으로 나눴을 때, A,B의 크기를 비교하면된다.  </p>\n<ul>\n<li>A와 B가 모두 N/2보다 크다면 A,B에서 N/2만큼 뺀다.</li>\n<li>A와 B가 모두 N/2보다 작다면 그대로 진행.</li>\n<li>A와 B, 하나는 N보다 크고 다른 하나는 N보다 작다면 N을 1까지 2로 나눈 카운터를 세면 된다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>b</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        n <span class=\"token operator\">=</span> n <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> \n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">&lt;</span> a <span class=\"token operator\">&amp;&amp;</span> n <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            a <span class=\"token operator\">=</span> a <span class=\"token operator\">-</span> n<span class=\"token punctuation\">;</span>\n            b <span class=\"token operator\">=</span> b <span class=\"token operator\">-</span> n<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">>=</span> a <span class=\"token operator\">&amp;&amp;</span> n <span class=\"token operator\">>=</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">let</span> count <span class=\"token operator\">=</span> <span class=\"token function\">powTwo</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> count<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">powTwo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">!==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        n <span class=\"token operator\">=</span> n <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> count<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4>아쉬운 점 &#x26; 느낀 점</h4>\n<p>이번 문제도 친구의 도움을 받았다.. 인적성 푸는게 진짜 도움이 될거 같다는 생각이 들었다.<br>\n그리고 이 문제에서 n>=a &#x26;&#x26; n>=b에서 같을 경우 처음에 안넣어줘서 계속 몇 개가 틀려서 시간낭비를 엄청 했다.<br>\n자바스크립트는 런타임 에러가 안뜨니까 더욱 조심해서 코드를 짜야할 것 같다.</p>","frontmatter":{"title":"[프로그래머스] 레벨2 (level2) 예상 대진표","date":"2020년 05월 23일, 09:55"}}},"pageContext":{"slug":"/post20/","previous":{"fields":{"slug":"/post19/"},"frontmatter":{"title":"[프로그래머스] 레벨2 (level2) 영어 끝말잇기","path":"/posts/19"}},"next":null}}}