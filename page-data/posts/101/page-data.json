{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/posts/101/","result":{"data":{"markdownRemark":{"html":"<p>자바스크립트에서는 함수와 연산자에 전달되는 값은 적절한 자료형으로 자동 변환 된다.</p>\n<p>❗객체의 형변환은 후에 정리.</p>\n<h3>문자형으로 변환</h3>\n<pre><code class=\"language-jsx\">let value = true;\n\nconsole.log(typeof value); // \"boolean\"\n\nvalue = String(value); // \"true\"\nconsole.log(typeof value); // \"string\"\n</code></pre>\n<p><code>String</code> 을 이용하면 문자열로 형변환이 가능하다.</p>\n<h3>숫자형으로 변환</h3>\n<p>숫자형으로는 <code>수학과 관련된 함수와 표현식</code>에서 자동으로 일어난다.</p>\n<pre><code class=\"language-jsx\">let value = \"6\";\n\nconsole.log(value / \"3\"); // 2\nconsole.log(value * \"2\"); // 12\nconsole.log(value - \"3\"); // 3\n\n// + 의 경우는 다름\nconsole.log(value + 1); // \"61\"\nconsole.log(value + \"1\"); // \"61\"\n</code></pre>\n<p>숫자와 관련된 계산들은 문자열로 계산하더라도 형변환이 일어나서 숫자로 계산된다.</p>\n<p><em>하지만, +의 경우는 문자열이 존재하는 경우 문자열로 형변환이 일어나서 계산된다.</em></p>\n<pre><code class=\"language-jsx\">let age = \"123\";\nconsole.log(typeof age); // \"string\"\n\nage = Number(age);\nconsole.log(typeof age); // \"number\"\n</code></pre>\n<p>자바스크립트에서는 브라우저에서 값을 받는 상황이 많은데, 이때 입력되는 값이 만약 문자열로 표현된 숫자라면, <code>Number</code> 함수를 이용해서 명시적으로 형을 변환해서 사용해야합니다.</p>\n<pre><code class=\"language-jsx\">let age = \"숫자가 아님!\";\n\nconsole.log(Number(age)); // NaN\n\n// 주의!\nconsole.log(typeof age); // \"number\"\nconsole.log(isNaN(age)); // true\n</code></pre>\n<p><code>Number</code> 함수를 이용해서 숫자가 아닌 문자열을 형 변환 시키면 NaN이라는 값이 나온다.</p>\n<p>하지만, <code>typeof</code> 를 이용해서 확인해보면 <code>\"number\"</code> 로 나오는 것을 볼 수 있다.</p>\n<p>이 경우에는, <code>isNaN</code> 이라는 함수를 써서 판별이 가능하다.</p>\n<p><strong>숫자형으로 변환 시 적용되는 규칙</strong></p>\n<pre><code class=\"language-jsx\">console.log(Number(undefined));    // NaN\nconsole.log(Number(\"   123    \")); // 123\nconsole.log(Number(\"12a3\"));       // 123\nconsole.log(Number(true));         // 1\nconsole.log(Number(false));        // 0\nconsole.log(Number(null));         // 0\n</code></pre>\n<p>❗ <code>undefiend</code> 와 <code>null</code> 은 숫자형 변환 시 결과가 다름!</p>\n<h3>Boolean형으로 변환</h3>\n<p>Boolean 형 변환은 논리 연산을 수행할 때 발생합니다.</p>\n<p><code>Boolean</code> 함수로 명시적으로 형변환이 가능합니다.</p>\n<pre><code class=\"language-jsx\">// 값이 뭔가 비어있는(?) 느낌을 주는 경우에는 모두 false\nconsole.log(Boolean(undefined));    // false\nconsole.log(Boolean(null));         // false\nconsole.log(Boolean(\"\"));           // false\n\n// 그 외의 경우들\nconsole.log(Boolean(true));         // true\nconsole.log(Boolean(1));            // true\nconsole.log(Boolean(false));        // false\nconsole.log(Boolean(0));            // false\nconsole.log(Boolean(\"hello\"));      // true\nconsole.log(Boolean(\"0\"));          // true :: \"0\"은 비어있지 않으니 true\nconsole.log(Boolean(NaN));          // false\n</code></pre>\n<h2>연산자</h2>\n<p><strong>거듭제곱</strong></p>\n<p><code>**</code> 를 사용하면 거듭제곱을 할 수 있다.</p>\n<pre><code class=\"language-jsx\">console.log(2 ** 3); // 8\nconsole.log(3 ** 3); // 27\nconsole.log(5 ** 3); // 125\n</code></pre>\n<p><strong>\"+\" 연산자</strong></p>\n<ul>\n<li>\n<p>위에서 소개했던, <code>문자열이 존재</code>하면 <code>문자열을 합치는 연산</code>이 일어난다.</p>\n<pre><code class=\"language-jsx\">console.log(2 + 2 + \"3\");   // \"43\"\nconsole.log(\"2\" + 2 * 2);   // \"24\"\nconsole.log(\"2\" + (4 + 7)); // \"211\"\n</code></pre>\n<p>연산은 왼쪽에서부터, 연산자의 우선 순위에 따라 연산되기 때문에 위와 같은 결과도 나올 수 있다.</p>\n</li>\n<li>\n<p>단항 연산자로 사용될 때 <code>Number</code> 함수와 동일한 결과값 출력.</p>\n<pre><code class=\"language-jsx\">console.log(+true);             // 1\nconsole.log(+false);            // 0\nconsole.log(+\"    123   \");     // 123\nconsole.log(+\"123\");            // 123\nconsole.log(+undefined);        // NaN\nconsole.log(+null);             // 0\nconsole.log(+\"\");               // 0\n</code></pre>\n</li>\n</ul>\n<h3>참고</h3>\n<p><a href=\"https://ko.javascript.info/object-methods\">https://ko.javascript.info/object-methods</a></p>","frontmatter":{"title":"[자바스크립트] 형변환 & 연산자","date":"2020년 10월 26일, 23:13"}}},"pageContext":{"slug":"/11/post101/","previous":{"fields":{"slug":"/11/post100/"},"frontmatter":{"title":"[자바스크립트] this","path":"/posts/100"}},"next":{"fields":{"slug":"/11/post102/"},"frontmatter":{"title":"[자바스크립트] 객체","path":"/posts/102"}}}},"staticQueryHashes":["3649515864"],"slicesMap":{}}