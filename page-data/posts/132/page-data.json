{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/posts/132/","result":{"data":{"markdownRemark":{"html":"<h2>리모컨</h2>\n<h3>문제풀이</h3>\n<p>완전탐색을 이용해서 풀어야하는 문제였다.</p>\n<ol>\n<li>처음 시작은 100번에서 시작하니 최댓값은 N-100의 절대값이다.</li>\n<li>i부터 시작해서 1000000까지 숫자를 살펴봐야한다.\n<ol>\n<li>이유는 타겟보다 작은 숫자에서 증가시키는 방법도 있지만, 타겟보다 큰 숫자에서 오는 경우도 있기 때문이다.</li>\n<li>숫자는 0,1,2,3,4,5,6,7,9로 만들 수 있는 최대 숫자로 지정했다.</li>\n</ol>\n</li>\n<li>각 숫자들이 고장나지 않은 버튼으로 만들 수 있는지 확인하고, 만들 수 있다면 고장나지 않은 버튼을 누른 횟수를 센다.</li>\n<li>횟수와 N에서 리모콘으로 만들 수 있는 숫자로 N에서 빼면(N - i) 버튼 누른 횟수를 알 수 있다.</li>\n<li>result와 비교하면서 최솟값을 구한다.</li>\n</ol>\n<h3>소스코드</h3>\n<pre><code class=\"language-js\">const log = console.log;\nconst fs = require(\"fs\");\nconst input = fs.readFileSync(\"/dev/stdin\").toString().trim().split(\"\\n\");\n// const input = fs.readFileSync(\"./stdin\").toString().trim().split(\"\\n\");\n\nconst N = +input[0];\nconst M = +input[1];\nlet brokens = Array(10).fill(false);\nif(M !== 0){\n  for(const a of input[2].split(\" \").map(e => +e)){\n    brokens[a] = true;\n  }\n}\n\n\nconst counting = (number) => {\n  if(number === 0){\n    if(brokens[0]) return 0;\n    return 1;\n  }\n  let count = 0;\n  while(number > 0){\n    if(brokens[number % 10]) return 0;\n    number = parseInt(number / 10);\n    count++;\n  }\n  return count;\n}\n\nlet result = Math.abs(N - 100);\n\nfor(let i=0 ; i&#x3C;=1000000 ; i++){\n  const count = counting(i);\n  if(count > 0) result = Math.min(result, count + Math.abs(N - i));\n}\n\nlog(result);\n</code></pre>","frontmatter":{"title":"[백준] 1107번 리모컨","date":"2021년 04월 14일, 20:00"}}},"pageContext":{"slug":"/14/post132/","previous":{"fields":{"slug":"/14/post131/"},"frontmatter":{"title":"[백준] 11657번 타임머신","path":"/posts/131"}},"next":{"fields":{"slug":"/14/post133/"},"frontmatter":{"title":"[백준] 15686번 치킨배달","path":"/posts/133"}}}},"staticQueryHashes":["3649515864"],"slicesMap":{}}