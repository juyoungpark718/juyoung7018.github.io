{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/posts/136/","result":{"data":{"markdownRemark":{"html":"<h2>모두 0으로 만들기</h2>\n<ul>\n<li><a href=\"https://programmers.co.kr/learn/courses/30/lessons/76503\">https://programmers.co.kr/learn/courses/30/lessons/76503</a></li>\n</ul>\n<h3>문제풀이</h3>\n<p>DFS로 푸는 문제인데, 상당히 조건이 까다로웠다.<br>\n우선, 자바스크립트로 재귀로 풀면 터져버린다. 파이썬의 경우 내부적으로 재귀함수 Limit을 바꿀 수 있지만,<br>\n자바스크립트는 불가능한 것 같다.(실행 시킬 때 nodejs의 경우 지정할 수 있는듯?)\n그래서 반복문으로 풀어야한다. 또 까다로웠던 점은 숫자의 크기가 커서 BigInt를 사용해서 합을 구해야한다.(안그럼 틀림)</p>\n<ol>\n<li>트리로 주어졌으니 임의의 한 점에서 부터 dfs로 탐색 후 리프노드에서부터 가중치를 더한다.</li>\n</ol>\n<h3>소스코드</h3>\n<pre><code class=\"language-js\">function solution(a, edges) {\n    let answer = 0n;\n    const adj = Array.from(Array(a.length), () => []);\n    const visited = Array(a.length).fill(false);\n    edges.forEach(e => {\n        const [u, v] = e;\n        adj[u].push(v);\n        adj[v].push(u);\n    });\n    if(a.reduce((acc,val) => acc+val, 0) !== 0) return -1;\n    const arr = [[0, null]];\n    while(arr.length){\n        const [start, parent] = arr.pop();\n        if(visited[start]){\n            answer += BigInt(Math.abs(Number(a[start])));\n            a[parent] += a[start];\n            a[start] = 0;\n            continue;\n        }\n        visited[start] = true;\n        arr.push([start, parent]);\n        for(const v of adj[start]){\n            if(visited[v]) continue;\n            arr.push([v, start]);\n        }\n    }\n    return Number(answer);\n}\n</code></pre>","frontmatter":{"title":"[프로그래머스] 모두 0으로 만들기","date":"2021년 04월 16일, 12:10"}}},"pageContext":{"slug":"/14/post136/","previous":{"fields":{"slug":"/14/post135/"},"frontmatter":{"title":"[백준] 1238번 파티","path":"/posts/135"}},"next":{"fields":{"slug":"/14/post137/"},"frontmatter":{"title":"[백준] 1504번 특정한 최단경로","path":"/posts/137"}}}},"staticQueryHashes":["3649515864"],"slicesMap":{}}