{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/posts/15/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<h2>N개의 최소공배수</h2>\n<h3>문제설명</h3>\n<p>두 수의 최소공배수(Least Common Multiple)란 입력된 두 수의 배수 중 공통이 되는 가장 작은 숫자를 의미합니다. 예를 들어 2와 7의 최소공배수는 14가 됩니다. 정의를 확장해서, n개의 수의 최소공배수는 n 개의 수들의 배수 중 공통이 되는 가장 작은 숫자가 됩니다. n개의 숫자를 담은 배열 arr이 입력되었을 때 이 수들의 최소공배수를 반환하는 함수, solution을 완성해 주세요.\n<strong><em>제한 사항</em></strong></p>\n<ul>\n<li>arr은 길이 1이상, 15이하인 배열입니다.</li>\n<li>arr의 원소는 100 이하인 자연수입니다.\n<strong><em>입출력 예</em></strong></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>arr</th>\n<th>result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[2,6,8,14]</td>\n<td>168</td>\n</tr>\n<tr>\n<td>[1,2,3]</td>\n<td>6</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<h2>문제풀이</h2>\n<p>항상 최소공배수, 최대공약수, 소수 등이 나오는 문제들은 겁먹게 된다..<br>\n이번 문제도 어떻게 풀어야하나.. 고민을 많이 했다.<br>\n다른 사람의 풀이를 보니 <del>나같인 푼사람은 없었다..</del> 보통 재귀함수를 이용해서 푸신 분들이 많았다.</p>\n<p>나는 주어진 숫자 배열을 정렬한 뒤 최댓값의 배수가 무조건 최대공배수이니까 이 생각으로 문제를 풀었다.<br>\n그래서 최댓값을 구하고, 최댓값의 배수를 최댓값을 제외한 나머지 값들로 나눠서 나머지가 0일 경우를 찾았다.</p>\n<pre><code class=\"language-js\">function solution(arr) {\n  var answer = 0;\n  let isFind = false;\n  let i = 1;\n  // arr.sort((a,b) => a-b)\n  let max = arr.splice(arr.length - 1, 1);\n  while (!isFind) {\n    isFind = arr.every(e => (max * i) % e === 0);\n    i++;\n  }\n  answer = max * (i - 1);\n  return answer;\n}\n</code></pre>\n<p>아 근데 혹시 몰라서 sort를 빼봤는데도 돌아가는거 보면, 정렬된 배열을 주는 것 같다.</p>\n<h3>아쉬운 점 || 느낀 점</h3>\n<p>재귀함수로도 한 번 나중에 풀어봐야겠다.</p>","frontmatter":{"title":"[프로그래머스] 레벨2 (level2) N개의 최소공배수","date":"2020년 05월 21일, 11:10"}}},"pageContext":{"slug":"/2/post15/","previous":{"fields":{"slug":"/2/post14/"},"frontmatter":{"title":"[프로그래머스] 레벨2 (level2) JadenCase","path":"/posts/14"}},"next":{"fields":{"slug":"/2/post16/"},"frontmatter":{"title":"[프로그래머스] 레벨2 (level2) 짝지어 제거하기","path":"/posts/16"}}}},"staticQueryHashes":["3649515864"],"slicesMap":{}}