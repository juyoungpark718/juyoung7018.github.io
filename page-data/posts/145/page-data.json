{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/posts/145/","result":{"data":{"markdownRemark":{"html":"<h2>치즈</h2>\n<ul>\n<li><a href=\"https://www.acmicpc.net/problem/2638\">https://www.acmicpc.net/problem/2638</a></li>\n</ul>\n<h3>문제풀이</h3>\n<p>bfs나 dfs를 이용해서 푸는 문제이다.<br>\n처음에는 그냥 공기에 닿아있는 곳을 기준으로 했었는데, 문제를 자세히 읽어보니 '외부공기'만 이였다.\n그래서, 가장자리는 항상 외부공기이므로, 가장자리 기준으로 dfs를 돌려서 외부공기를 체크해줬다.</p>\n<p>그 후에는 외부공기를 계속 확인해주면서 치즈를 없애고 time을 계산했다.</p>\n<h3>소스코드</h3>\n<pre><code class=\"language-js\">const log = console.log;\nconst fs = require(\"fs\");\nconst input = fs.readFileSync(\"/dev/stdin\").toString().trim().split(\"\\n\");\n// const input = fs.readFileSync(\"./stdin\").toString().trim().split(\"\\n\");\n\nconst [M, N] = input[0].split(\" \").map(e => +e);\nconst space = Array.from(Array(M), () => Array(N).fill(0));\nconst cheeses = [];\nlet count = 0;\nconst dx = [1,-1,0,0];\nconst dy = [0,0,1,-1];\ninput.slice(1, M+1).map((e, y) => e.split(\" \").map((el, x) => {\n  el = Number(el);\n  if(el === 1){\n    count++;\n    space[y][x] = 1\n    cheeses.push([y, x]);\n  }\n}));\n\nconst markAir = () => {\n  const queue = [[0,0]];\n  const visited = Array.from(Array(M), () => Array(N).fill(false));\n  while(queue.length){\n    const [y, x] = queue.pop();\n    for(let i=0 ; i&#x3C;4 ; i++){\n      const nx = x + dx[i];\n      const ny = y + dy[i];\n      if(nx &#x3C; 0 || ny &#x3C; 0 || nx >= N || ny >= M || visited[ny][nx] || space[ny][nx] === 1) continue;\n      visited[ny][nx] = true;\n      space[ny][nx] = -1;\n      queue.push([ny, nx]);\n    }\n  }\n}\n\nconst meltingCheese = (y, x) => {\n  let air = 0;\n  for(let i=0 ; i&#x3C;4 ; i++){\n    const ny = y + dy[i];\n    const nx = x + dx[i];\n    if(ny &#x3C; 0 || nx &#x3C; 0 || ny >= M || nx >= N || space[ny][nx] === 1 || space[ny][nx] === 0) continue;\n    air++;\n  }\n  return air >= 2 ? true : false;\n}\n\nlet time = 0;\n\nwhile(count){\n  markAir();\n  let meltedCheese = [];\n  for(let i=0 ; i&#x3C;cheeses.length ; i++){\n    const [y, x] = cheeses[i];\n    if(space[y][x] === -1) continue;\n    if(meltingCheese(y, x)){\n      meltedCheese.push([y, x]);\n      count--;\n      continue;\n    }\n  }\n  meltedCheese.forEach(([y, x]) => space[y][x] = -1);\n  time++;\n}\n\nlog(time);\n</code></pre>","frontmatter":{"title":"[백준] 2638번 치즈","date":"2021년 06월 04일, 22:00"}}},"pageContext":{"slug":"/15/post145/","previous":{"fields":{"slug":"/15/post144/"},"frontmatter":{"title":"[Cypress] 자바스크립트 e2e 테스트 프레임워크","path":"/posts/144"}},"next":{"fields":{"slug":"/15/post146/"},"frontmatter":{"title":"[Storybooy] Storybook(react) 튜토리얼","path":"/posts/146"}}}},"staticQueryHashes":["3649515864"],"slicesMap":{}}