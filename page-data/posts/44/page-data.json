{"componentChunkName":"component---src-templates-blog-template-js","path":"/posts/44","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<h2>이중우선순위큐</h2>\n<h3>문제설명</h3>\n<p>이중 우선순위 큐는 다음 연산을 할 수 있는 자료구조를 말합니다.</p>\n<table>\n<thead>\n<tr>\n<th>명령어</th>\n<th>수신 탑(높이)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\"I 숫자\"</td>\n<td>큐에 주어진 숫자를 삽입합니다.</td>\n</tr>\n<tr>\n<td>\"D 1\"</td>\n<td>큐에서 최댓값을 삭제합니다.</td>\n</tr>\n<tr>\n<td>\"D -1\"</td>\n<td>큐에서 최솟값을 삭제합니다.</td>\n</tr>\n</tbody>\n</table>\n<p>이중 우선순위 큐가 할 연산 operations가 매개변수로 주어질 때, 모든 연산을 처리한 후 큐가 비어있으면 [0, 0] 비어있지 않으면 [최댓값, 최솟값]을 return 하도록 solution 함수를 구현해주세요.</p>\n<p><strong><em>제한사항</em></strong></p>\n<ul>\n<li>operations는 길이가 1 이상 1,000,000 이하인 문자열 배열입니다.</li>\n<li>\n<p>operations의 원소는 큐가 수행할 연산을 나타냅니다.</p>\n<ul>\n<li>원소는 “명령어 데이터” 형식으로 주어집니다.- 최댓값/최솟값을 삭제하는 연산에서 최댓값/최솟값이 둘 이상인 경우, 하나만 삭제합니다.</li>\n</ul>\n</li>\n<li>빈 큐에 데이터를 삭제하라는 연산이 주어질 경우, 해당 연산은 무시합니다.</li>\n</ul>\n<p><strong><em>입출력 예</em></strong></p>\n<table>\n<thead>\n<tr>\n<th>operations</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[\"I 16\",\"D 1\"]</td>\n<td>[0, 0]</td>\n</tr>\n<tr>\n<td>[\"I 7\",\"I 5\",\"I -5\",\"D -1\"]</td>\n<td>[7, 5]</td>\n</tr>\n</tbody>\n</table>\n<p><strong><em>입출력 예 설명</em></strong></p>\n<p>16을 삽입 후 최댓값을 삭제합니다. 비어있으므로 [0,0]을 반환합니다.\n7,5,-5를 삽입 후 최솟값을 삭제합니다. 최대값 7, 최소값 5를 반환합니다.</p>\n</blockquote>\n<h3>문제풀이</h3>\n<p>자바스크립트 배열은 push와 shift를 지원해주니, 배열을 정렬한 뒤에 사용하면 된다.</p>\n<ol>\n<li>operations만큼 for문을 돌림.</li>\n<li>\n<p>명령어가 I, D일 때를 나누고,</p>\n<ol>\n<li>I인 경우는 값을 넣고 정렬.</li>\n<li>D인 경우는 1,-1에 따라서 pop,shift를 해줌.</li>\n</ol>\n</li>\n<li>요구사항에 맞게 answer을 반환.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">operations</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> queue <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  operations<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>command<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    num <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">case</span> <span class=\"token string\">\"I\"</span><span class=\"token operator\">:</span>\n        queue<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        queue<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">case</span> <span class=\"token string\">\"D\"</span><span class=\"token operator\">:</span>\n        num <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> queue<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> queue<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>queue<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">else</span> answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>queue<span class=\"token punctuation\">[</span>queue<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> queue<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","frontmatter":{"title":"[프로그래머스] 레벨3 (level3) 이중우선순위큐","date":"2020년 06월 15일, 14:50"}}},"pageContext":{"slug":"/5/post44/","previous":{"fields":{"slug":"/5/post43/"},"frontmatter":{"title":"[프로그래머스] 레벨3 (level3) 여행경로","path":"/posts/43"}},"next":{"fields":{"slug":"/5/post45/"},"frontmatter":{"title":"[프로그래머스] 레벨3 (level3) 입국심사","path":"/posts/45"}}}}}