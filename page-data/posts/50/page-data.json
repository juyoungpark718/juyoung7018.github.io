{"componentChunkName":"component---src-templates-blog-template-js","path":"/posts/50","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<h2>거스름돈</h2>\n<h3>문제설명</h3>\n<p>Finn은 편의점에서 야간 아르바이트를 하고 있습니다. 야간에 손님이 너무 없어 심심한 Finn은 손님들께 거스름돈을 n 원을 줄 때 방법의 경우의 수를 구하기로 하였습니다.</p>\n<p>예를 들어서 손님께 5원을 거슬러 줘야 하고 1원, 2원, 5원이 있다면 다음과 같이 4가지 방법으로 5원을 거슬러 줄 수 있습니다.</p>\n<p>1원을 5개 사용해서 거슬러 준다.<br>\n1원을 3개 사용하고, 2원을 1개 사용해서 거슬러 준다.<br>\n1원을 1개 사용하고, 2원을 2개 사용해서 거슬러 준다.<br>\n5원을 1개 사용해서 거슬러 준다.<br>\n거슬러 줘야 하는 금액 n과 Finn이 현재 보유하고 있는 돈의 종류 money가 매개변수로 주어질 때, Finn이 n 원을 거슬러 줄 방법의 수를 return 하도록 solution 함수를 완성해 주세요.</p>\n<p><strong><em>제한 사항</em></strong></p>\n<ul>\n<li>n은 100,000 이하의 자연수입니다.</li>\n<li>화폐 단위는 100종류 이하입니다.</li>\n<li>모든 화폐는 무한하게 있다고 가정합니다.</li>\n<li>정답이 커질 수 있으니, 1,000,000,007로 나눈 나머지를 return 해주세요.</li>\n</ul>\n<p><strong><em>입출력 예</em></strong></p>\n<table>\n<thead>\n<tr>\n<th>n</th>\n<th>money</th>\n<th>result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>5</td>\n<td>[1 ,2 ,5]</td>\n<td>4</td>\n</tr>\n</tbody>\n</table>\n<p><strong><em>입출력 예 설명</em></strong></p>\n<p><strong>입출력 예</strong> #1<br>\n문제의 예시와 같습니다.</p>\n</blockquote>\n<h3>문제풀이</h3>\n<ol>\n<li>dp를 사용하기 위해서 n+1만큼 배열을 만들어준다.(0은 제외시키기 위해서 +1)</li>\n<li>dp[0] = 1을 해준다.(0원을 만드는 경우는 모두 가지고 있음).</li>\n<li>\n<p>money만큼 for문을 돌려주는데,</p>\n<ol>\n<li>dp가 바뀔 때는, money보다 만들 수 있는 거스름돈이 크거나 같을 때이다. 그래서 i는 항상 el로 시작한다.</li>\n<li>그래서, dp[i] += dp[i-el];을 해준다.(ex. dp[2] = dp[2]+ dp[0] => money가 2일 때 계속 진행하면 2의 배수만 1이 된다.)</li>\n</ol>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n<span class=\"token punctuation\">,</span> money</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> dp <span class=\"token operator\">=</span> <span class=\"token function\">Array</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  money<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el<span class=\"token punctuation\">,</span> idx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> el<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> el<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  answer <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">%</span> <span class=\"token number\">1000000007</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4>아쉬운 점 || 느낀 점</h4>\n<p>dp를 이용해서 풀어야한다는 힌트를 얻고도 풀지 못했다.<br>\n그냥 진짜 생각이 부족한 것 같다.<br>\n생각을 못할 것 같으면 얼른 여러문제들을 풀어보고,<br>\n다시 복습해서 경험을 쌓아야 할 것 같다.</p>","frontmatter":{"title":"[프로그래머스] 레벨3 (level3) 거스름돈","date":"2020년 06월 21일, 09:00"}}},"pageContext":{"slug":"/5/post50/","previous":{"fields":{"slug":"/5/post49/"},"frontmatter":{"title":"[프로그래머스] 레벨3 (level3)가장긴팰린드롬","path":"/posts/49"}},"next":{"fields":{"slug":"/6/post51/"},"frontmatter":{"title":"[프로그래머스] 레벨3 (level3) 멀리뛰기","path":"/posts/51"}}}}}