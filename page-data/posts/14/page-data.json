{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/posts/14/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<h2>JadenCase</h2>\n<h3>문제 설명</h3>\n<p>JadenCase란 모든 단어의 첫 문자가 대문자이고, 그 외의 알파벳은 소문자인 문자열입니다. 문자열 s가 주어졌을 때, s를 JadenCase로 바꾼 문자열을 리턴하는 함수, solution을 완성해주세요.</p>\n<p><strong><em>제한조건</em></strong></p>\n<ul>\n<li>s는 길이 1 이상인 문자열입니다.</li>\n<li>s는 알파벳과 공백문자(\" \")로 이루어져 있습니다.</li>\n<li>첫 문자가 영문이 아닐때에는 이어지는 영문은 소문자로 씁니다. ( 첫번째 입출력 예 참고 )</li>\n</ul>\n<p><strong><em>입출력 예</em></strong></p>\n<table>\n<thead>\n<tr>\n<th>s</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\"3people unFollowed me\"</td>\n<td>\"3people Unfollowed Me\"</td>\n</tr>\n<tr>\n<td>\"for the last week\"</td>\n<td>\"For The Last Week\"</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<h2>문제풀이</h2>\n<p>공백으로 나뉘어진 문자열이기 때문에 split을 이용해서 단어의 배열을 만들고,<br>\n문자열의 첫번째 단어를 대문자로 바꾸고 나머지 문자열과 합치면 된다.</p>\n<pre><code class=\"language-js\">function solution(s) {\n  var answer = \"\";\n  let arr = s.split(\" \");\n  arr = arr.map(e => {\n    let temp = e.slice(1, e.length).toLowerCase();\n    let temp2 = e.slice(0, 1).toUpperCase();\n    return temp2 + temp;\n  });\n  answer = arr.join(\" \");\n  return answer;\n}\n</code></pre>\n<h4>아쉬운 점 || 느낀 점</h4>\n<p>문제가 사실 어렵진 않았다. 근데 slice만 이용해서 풀었는데,<br>\n다른 사람들의 풀이를 보니 charAt과 subString으로도 푼 걸 봤다.<br>\n문자열에 대해서 좀 더 다른 함수들도 공부해서 사용해봐야겠다.</p>","frontmatter":{"title":"[프로그래머스] 레벨2 (level2) JadenCase","date":"2020년 05월 20일, 09:04"}}},"pageContext":{"slug":"/2/post14/","previous":{"fields":{"slug":"/2/post13/"},"frontmatter":{"title":"[프로그래머스] 레벨2 (level2) 행렬의 곱셈","path":"/posts/13"}},"next":{"fields":{"slug":"/2/post15/"},"frontmatter":{"title":"[프로그래머스] 레벨2 (level2) N개의 최소공배수","path":"/posts/15"}}}},"staticQueryHashes":["3649515864"],"slicesMap":{}}