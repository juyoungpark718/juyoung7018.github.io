{"componentChunkName":"component---src-templates-blog-template-js","path":"/posts/30","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<h2>n진수 게임</h2>\n<h3>문제설명</h3>\n<p>튜브가 활동하는 코딩 동아리에서는 전통적으로 해오는 게임이 있다. 이 게임은 여러 사람이 둥글게 앉아서 숫자를 하나씩 차례대로 말하는 게임인데, 규칙은 다음과 같다.</p>\n<p>숫자를 0부터 시작해서 차례대로 말한다. 첫 번째 사람은 0, 두 번째 사람은 1, … 열 번째 사람은 9를 말한다.\n10 이상의 숫자부터는 한 자리씩 끊어서 말한다. 즉 열한 번째 사람은 10의 첫 자리인 1, 열두 번째 사람은 둘째 자리인 0을 말한다.\n이렇게 게임을 진행할 경우,<br>\n<code class=\"language-text\">0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 0, 1, 1, 1, 2, 1, 3, 1, 4, …</code><br>\n순으로 숫자를 말하면 된다.</p>\n<p>한편 코딩 동아리 일원들은 컴퓨터를 다루는 사람답게 이진수로 이 게임을 진행하기도 하는데, 이 경우에는<br>\n<code class=\"language-text\">0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, …</code><br>\n순으로 숫자를 말하면 된다.</p>\n<p>이진수로 진행하는 게임에 익숙해져 질려가던 사람들은 좀 더 난이도를 높이기 위해 이진법에서 십육진법까지 모든 진법으로 게임을 진행해보기로 했다. 숫자 게임이 익숙하지 않은 튜브는 게임에 져서 벌칙을 받는 굴욕을 피하기 위해, 자신이 말해야 하는 숫자를 스마트폰에 미리 출력해주는 프로그램을 만들려고 한다. 튜브의 프로그램을 구현하라.</p>\n<p><strong><em>입력 형식</em></strong></p>\n<p>진법 n, 미리 구할 숫자의 갯수 t, 게임에 참가하는 인원 m, 튜브의 순서 p 가 주어진다.</p>\n<ul>\n<li><code class=\"language-text\">- 2 ≦ n ≦ 16</code></li>\n<li><code class=\"language-text\">- 0 ＜ t ≦ 1000</code></li>\n<li><code class=\"language-text\">- 2 ≦ m ≦ 100</code></li>\n<li><code class=\"language-text\">- 1 ≦ p ≦ m</code></li>\n</ul>\n<p><strong><em>출력 형식</em></strong></p>\n<p>튜브가 말해야 하는 숫자 t개를 공백 없이 차례대로 나타낸 문자열. 단, 10~15는 각각 대문자 A~F로 출력한다.</p>\n<p><strong><em>입출력 예제</em></strong></p>\n<table>\n<thead>\n<tr>\n<th>n</th>\n<th>t</th>\n<th>m</th>\n<th>p</th>\n<th>result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2</td>\n<td>4</td>\n<td>2</td>\n<td>1</td>\n<td>0111</td>\n</tr>\n<tr>\n<td>16</td>\n<td>16</td>\n<td>2</td>\n<td>1</td>\n<td>02468ACE11111111</td>\n</tr>\n<tr>\n<td>16</td>\n<td>16</td>\n<td>2</td>\n<td>2</td>\n<td>13579BDF01234567</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<h2>문제풀이</h2>\n<p>문자열을 만들어서 n진수 숫자를 계속 더해주고,<br>\n입력받은 순서에 해당하는 문자열이 있으면 answer에 넣어주고, 아니라면 문자열에 n진수를 더하면 된다.<br>\n이렇게 반복해서 answer의 길이가 미리 구할 숫자의 갯수랑 같으면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">,</span> p</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> answer <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> idx <span class=\"token operator\">=</span> p <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!=</span> t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> num <span class=\"token operator\">=</span> j<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>str<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      j<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n      str <span class=\"token operator\">+=</span> num<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      answer <span class=\"token operator\">+=</span> str<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      idx <span class=\"token operator\">+=</span> m<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","frontmatter":{"title":"[프로그래머스] 레벨2 (level2) n진수게임","date":"2020년 06월 01일, 10:47"}}},"pageContext":{"slug":"/3/post30/","previous":{"fields":{"slug":"/3/post29/"},"frontmatter":{"title":"[프로그래머스] 레벨2 (level2) 파일명정렬","path":"/posts/29"}},"next":{"fields":{"slug":"/4/post31/"},"frontmatter":{"title":"[프로그래머스] 레벨3 (level3) 추석트래픽","path":"/posts/31"}}}}}