{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/posts/41/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<h2>예산</h2>\n<h3>문제설명</h3>\n<p>국가의 역할 중 하나는 여러 지방의 예산요청을 심사하여 국가의 예산을 분배하는 것입니다. 국가예산의 총액은 미리 정해져 있어서 모든 예산요청을 배정해 주기는 어려울 수도 있습니다. 그래서 정해진 총액 이하에서 가능한 한 최대의 총 예산을 다음과 같은 방법으로 배정합니다.</p>\n<pre><code>1. 모든 요청이 배정될 수 있는 경우에는 요청한 금액을 그대로 배정합니다.\n2. 모든 요청이 배정될 수 없는 경우에는 특정한 정수 상한액을 계산하여 그 이상인 예산요청에는 모두 상한액을 배정합니다.\n   상한액 이하의 예산요청에 대해서는 요청한 금액을 그대로 배정합니다.\n</code></pre>\n<p>예를 들어,</p>\n<p>전체 국가예산이 485이고 4개 지방의 예산요청이 각각 120, 110, 140, 150일 때,</p>\n<p>상한액을 127로 잡으면 위의 요청들에 대해서 각각 120, 110, 127, 127을 배정하고 그 합이 484로 가능한 최대가 됩니다.</p>\n<p>각 지방에서 요청하는 예산이 담긴 배열 budgets과 총 예산 M이 매개변수로 주어질 때,</p>\n<p>위의 조건을 모두 만족하는 상한액을 return 하도록 solution 함수를 작성해주세요.</p>\n<p><strong><em>제한 사항</em></strong></p>\n<ul>\n<li>지방의 수는 3 이상 100,000 이하인 자연수입니다.</li>\n<li>각 지방에서 요청하는 예산은 1 이상 100,000 이하인 자연수입니다.</li>\n<li>총 예산은 지방의 수 이상 1,000,000,000 이하인 자연수입니다.</li>\n</ul>\n<p><strong><em>입출력 예</em></strong></p>\n<table>\n<thead>\n<tr>\n<th>budgets</th>\n<th>M</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[120, 110, 140, 150]</td>\n<td>485</td>\n<td>127</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<h3>문제풀이</h3>\n<p>프로그래머스에서는 이분탐색 카테고리에 있다. 하지만 다른방식으로 품.</p>\n<ol>\n<li>total이 M이랑 작거나 같으면 budgets에서 최댓값 출력.</li>\n<li>answer은 전에 answer과 M/budgets.length의 값(평균) 중 큰 값을 뽑는다.</li>\n<li>M에서 budgets에서 뽑은 원소를 뺀다.</li>\n</ol>\n<p>while문에서 answer을 처음에 두는 이유는, budgets의 최솟값이 M이랑 같은 경우를 생각해야하기 때문이다.</p>\n<pre><code class=\"language-js\">function solution(budgets, M) {\n  budgets.sort((a, b) => b - a);\n  var answer = 0;\n  let len = budgets.length;\n  let total = budgets.reduce((acc, val) => acc + val);\n  if (total &#x3C;= M) return budgets[0];\n\n  while (budgets.length !== 0) {\n    if (M &#x3C; 0) break;\n    answer = Math.max(answer, Math.floor(M / budgets.length));\n    M -= budgets.pop();\n  }\n  return answer;\n}\n</code></pre>\n<h4>아쉬운 점 || 느낀 점</h4>\n<p>이분탐색 카테고리에 있어서 이분 탐색으로 풀었으면 좋았을텐데,<br>\n다른 방식으로 풀어서 조금 찝찝하긴 하다.<br>\n나중에 한번 더 풀어봐야 겠다.</p>","frontmatter":{"title":"[프로그래머스] 레벨3 (level3) 예산","date":"2020년 06월 12일, 11:40"}}},"pageContext":{"slug":"/5/post41/","previous":{"fields":{"slug":"/4/post40/"},"frontmatter":{"title":"[프로그래머스] 레벨3 (level3) 단어 변환","path":"/posts/40"}},"next":{"fields":{"slug":"/5/post42/"},"frontmatter":{"title":"[프로그래머스] 레벨3 (level3) 단속카메라","path":"/posts/42"}}}},"staticQueryHashes":["3649515864"],"slicesMap":{}}