{"componentChunkName":"component---src-templates-blog-template-js","path":"/posts/8","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<h2>폰켓몬</h2>\n<h3>문제설명</h3>\n<p>당신은 폰켓몬을 잡기 위한 오랜 여행 끝에, 홍 박사님의 연구실에 도착했습니다. 홍 박사님은 당신에게 자신의 연구실에 있는 총 N 마리의 폰켓몬 중에서 N/2마리를 가져가도 좋다고 했습니다.<br>\n홍 박사님 연구실의 폰켓몬은 종류에 따라 번호를 붙여 구분합니다. 따라서 같은 종류의 폰켓몬은 같은 번호를 가지고 있습니다.</p>\n<p>예를 들어 연구실에 총 4마리의 폰켓몬이 있고,\n각 폰켓몬의 종류 번호가 [3번, 1번, 2번, 3번]이라면<br>\n이는 <strong>3번 폰켓몬</strong> <strong><em>두 마리</em></strong>, <strong>1번 폰켓몬</strong> <strong><em>한 마리</em></strong>, <strong>2번 폰켓몬</strong> **<em>한 마리</em>**가 있음을 나타냅니다.<br>\n이때, 4마리의 폰켓몬 중 2마리를 고르는 방법은 다음과 같이 6가지가 있습니다.</p>\n<ol>\n<li>첫 번째(3번), 두 번째(1번) 폰켓몬을 선택</li>\n<li>첫 번째(3번), 세 번째(2번) 폰켓몬을 선택</li>\n<li>첫 번째(3번), 네 번째(3번) 폰켓몬을 선택</li>\n<li>두 번째(1번), 세 번째(2번) 폰켓몬을 선택</li>\n<li>두 번째(1번), 네 번째(3번) 폰켓몬을 선택</li>\n<li>세 번째(2번), 네 번째(3번) 폰켓몬을 선택</li>\n</ol>\n<p>이때, 첫 번째(3번) 폰켓몬과 네 번째(3번) 폰켓몬을 선택하는 방법은 한 종류(3번 폰켓몬 두 마리)의 폰켓몬만 가질 수 있지만, 다른 방법들은 모두 두 종류의 폰켓몬을 가질 수 있습니다. 따라서 위 예시에서 가질 수 있는 폰켓몬 종류 수의 최댓값은 2가 됩니다.<br>\n당신은 최대한 다양한 종류의 폰켓몬을 가지길 원하기 때문에, 최대한 많은 종류의 폰켓몬을 포함해서 N/2마리를 선택하려 합니다. N마리 폰켓몬의 종류 번호가 담긴 배열 nums가 매개변수로 주어질 때, N/2마리의 폰켓몬을 선택하는 방법 중, 가장 많은 종류의 폰켓몬을 선택하는 방법을 찾아, 그때의 폰켓몬 종류 번호의 개수를 return 하도록 solution 함수를 완성해주세요.</p>\n<p><strong><em>제한사항</em></strong></p>\n<ul>\n<li>nums는 폰켓몬의 종류 번호가 담긴 1차원 배열입니다.</li>\n<li>nums의 길이(N)는 1 이상 10,000 이하의 자연수이며, 항상 짝수로 주어집니다.</li>\n<li>폰켓몬의 종류 번호는 1 이상 200,000 이하의 자연수로 나타냅니다.</li>\n<li>가장 많은 종류의 폰켓몬을 선택하는 방법이 여러 가지인 경우에도, 선택할 수 있는 폰켓몬 종류 개수의 최댓값 하나만 return 하면 됩니다.</li>\n</ul>\n</blockquote>\n<h3>처음 생각</h3>\n<p>처음에 문제를 진짜 너무 대충 보고, 다른 풀이도 생각안한 상태로 순열 문제구나! 하고 생각하고 풀었던 것 같다.<br>\n근데 순열로 풀어도 풀려야 할 것 같은데, 왜 안풀린지는 잘 모르겠다.. 근데 어찌됐든 순열로 풀게 되면 너무 낭비가 심한 문제였다.<br>\n그래도 reduce를 이용해서 순열 한번 짜본 연습은 좋았다</p>\n<h4>처음 코드</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nums</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token function\">permutation</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>nums<span class=\"token punctuation\">.</span>length<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">let</span> count <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span>\n  count <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span>b</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span>a<span class=\"token operator\">-</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  answer <span class=\"token operator\">=</span> count<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">permutation</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nums<span class=\"token punctuation\">,</span>selected<span class=\"token punctuation\">,</span>maxlength</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span>poketmon<span class=\"token punctuation\">,</span>idx</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> newArr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>nums<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        newArr<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>idx<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        selected<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>poketmon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>selected<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> maxlength<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            acc<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>selected<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            selected<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> acc<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token function\">permutation</span><span class=\"token punctuation\">(</span>newArr<span class=\"token punctuation\">,</span>selected<span class=\"token punctuation\">,</span>maxlength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        acc<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        selected<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> acc<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>문제풀이</h2>\n<p>진짜 너무나도 간단한 풀이여서 풀이라고 말할 수도 없을 것 같다..<br>\nnums배열 나누기 2(maxLength)값을 구하고,<br>\nnums배열에서 중복을 제거한 뒤에 길이(numsSet)와 maxLength를 비교해서,</p>\n<p>만약, <strong>numsSet의 길이</strong>가 <strong>maxLength보다 크거나 같으면</strong>,</p>\n<p><strong><em>answer = maxLength</em></strong></p>\n<p><strong>작은 경우</strong>에는,</p>\n<p>**<em>answer = numsSet.length</em>**로 해주면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nums</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> maxLength <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span>length <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> numsSet <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>maxLength <span class=\"token operator\">&lt;=</span> numsSet<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    answer <span class=\"token operator\">=</span> maxLength<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    answer <span class=\"token operator\">=</span> numsSet<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>아쉬운 점 &#x26; 느낀 점</h3>\n<p>문제를 풀 때에 처음에 생각한 방식으로 풀어보고나서 고민하자라고 생각을 했었는데,<br>\n문제 풀기 전에 방식도 충분히 고민해야겠다는 생각이 들었다.<br>\n물론 재귀+reduce의 활용을 연습한 것은 좋았지만, 만약에 실제 시험이였다면 시간을 많이 잡아먹었을 것이다.\n그래도, 전보다 순열을 짜는데 수월했고 또 바로 문제를 다시 보고 풀었으니 만족한다.</p>","frontmatter":{"title":"[프로그래머스] 레벨2 (level2) 폰켓몬","date":"2020년 05월 17일, 10:00"}}},"pageContext":{"slug":"/1/post8/","previous":{"fields":{"slug":"/1/post6/"},"frontmatter":{"title":"[프로그래머스] 레벨2 (level2) 땅따먹기","path":"/posts/6"}},"next":{"fields":{"slug":"/1/post9/"},"frontmatter":{"title":"[프로그래머스] 레벨2 (level2) 숫자의 표현","path":"/posts/9"}}}}}