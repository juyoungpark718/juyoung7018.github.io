{"componentChunkName":"component---src-templates-blog-template-js","path":"/posts/12","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<h2>피보나치 수</h2>\n<h3>문제설명</h3>\n<p>피보나치 수는 F(0) = 0, F(1) = 1일 때, 1 이상의 n에 대하여 F(n) = F(n-1) + F(n-2) 가 적용되는 수 입니다.</p>\n<p>예를들어</p>\n<ul>\n<li>F(2) = F(0) + F(1) = 0 + 1 = 1</li>\n<li>F(3) = F(1) + F(2) = 1 + 1 = 2</li>\n<li>F(4) = F(2) + F(3) = 1 + 2 = 3</li>\n<li>F(5) = F(3) + F(4) = 2 + 3 = 5\n와 같이 이어집니다.</li>\n</ul>\n<p>2 이상의 n이 입력되었을 때, n번째 피보나치 수를 1234567으로 나눈 나머지를 리턴하는 함수, solution을 완성해 주세요.</p>\n<p><strong><em>제한 사항</em></strong></p>\n<ul>\n<li>n은 1이상, 100000이하인 자연수입니다.</li>\n</ul>\n<p><strong><em>입출력 예</em></strong></p>\n<table>\n<thead>\n<tr>\n<th>n</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>3</td>\n<td>2</td>\n</tr>\n<tr>\n<td>5</td>\n<td>5</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<h2>처음 풀이</h2>\n<p>처음에는 재귀 함수를 이용해서 피보나치를 구현했다.<br>\n하지만, 타임아웃으로 실패가 떠서 다른 방법을 사용해서 구했다.<br>\n근데 문제를 풀고 나서 다른 사람의 풀이에는 재귀함수로 푸신 분들도 계셨는데, 이는 왜그러는지 잘 모르겠다.\n<strong>재귀함수코드</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">fibonacci</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> result1 <span class=\"token operator\">=</span> <span class=\"token function\">fibonacci</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">fibonacci</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> result1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>문제풀이</h2>\n<p>사실, 피보나치 수를 구하는 것은 충분히 문제를 풀어본 사람에게는 어렵지 않을 것이다.<br>\n하지만, 문제가 이해가 안되서 이 문제를 삽질을 했는데..<br>\n<strong><em>1234567로 모든 수의 나머지를 구해서 더해야 한다..</em></strong></p>\n<p><strong>소스코드</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  answer <span class=\"token operator\">=</span> <span class=\"token function\">fibonacci2</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">1234567</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">fibonacci2</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    arr<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">%</span> <span class=\"token number\">1234567</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">%</span> <span class=\"token number\">1234567</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>아쉬운 점 || 느낀 점</h3>\n<p>사실 문제가 정말 이상하게 적혀있어서 결과 값에만 1234567을 나눈 나머지를 구하는 문제인줄 알았다.<br>\n뭔가 이상하더라니.. 아무튼 재귀로도 풀어보고(물론 타임아웃이 발생했지만) 다른 방식으로도 풀어서 만족한다.<br>\n(<del>근데 점수 많이줌..</del>)</p>","frontmatter":{"title":"[프로그래머스] 레벨2 (level2) 피보나치 수","date":"2020년 05월 19일, 09:58"}}},"pageContext":{"slug":"/2/post12/","previous":{"fields":{"slug":"/2/post11/"},"frontmatter":{"title":"[프로그래머스]레벨2(level2)최솟값과 최댓값/최솟값 만들기","path":"/posts/11"}},"next":{"fields":{"slug":"/2/post13/"},"frontmatter":{"title":"[프로그래머스] 레벨2 (level2) 행렬의 곱셈","path":"/posts/13"}}}},"staticQueryHashes":["1791144535","3649515864"]}