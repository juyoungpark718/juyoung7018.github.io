{"componentChunkName":"component---src-templates-blog-template-js","path":"/posts/90","result":{"data":{"markdownRemark":{"html":"<ul>\n<li>\n<p>복잡도</p>\n<ul>\n<li>\n<p><strong>O</strong></p>\n<ul>\n<li><code class=\"language-text\">빅-오</code> 라고 읽는다.</li>\n<li>점근적 상한에 대한 표기법.</li>\n<li>\n<p>O(g(n))은 g(n)의 증가율보다 작거나 같은 함수들의 <strong>집합</strong>이다.</p>\n<p>예를 들어 O(n2)에는 O(1),O(n),O(nlogn) 등이 포함된다.</p>\n<p>주어진 알고리즘의 증가율보다 크거나 같은 <strong>최소의 증가율</strong>을 찾는 것이 목적.</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Ω</strong></p>\n<ul>\n<li><code class=\"language-text\">빅-오메가</code> 라고 읽는다.</li>\n<li>점근적 하한에 대한 표기법.</li>\n<li>주어진 알고리즘의 증가율보다 작거나 같은 <strong>최대의 증가율</strong>을 찾는 것이 목적.</li>\n</ul>\n</li>\n<li>\n<p><strong>Θ</strong></p>\n<ul>\n<li><code class=\"language-text\">빅-세타</code> 라고 읽는다.</li>\n<li>이 표기법은 주어진 함수(알고리즘)의 상한과 하한이 같은지 아닌지를 결정한다.</li>\n<li>\n<p>세타(Θ) 표기법은 항상 상한(O)과 하한(Ω) 사이에 존재한다.</p>\n<ul>\n<li>상한과 하한이 같다면, 세타 표기법도 같은 증가율을 갖는다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>빅오가 최고 오래걸리는 상태라고 보면되고, 오메가는 적게 걸릴 때, 세타는 그 둘이 같을 때라고 보면 될 것 같다.</li>\n<li>\n<p>시간 복잡도 &#x26; 공간 복잡도</p>\n<ul>\n<li>시간 복잡도는 몇 번 실행하냐?</li>\n<li>\n<p>공간 복잡도는 얼마만큼의 공간을 사용해야하나?</p>\n<ul>\n<li>고정공간 + 가변 공간으로 이루어져 있는데, 가변 공간을 얼만큼 사용하냐에 따라 복잡도가 나뉨.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>연속 배열과 링크드 리스트의 차이점.</p>\n<p>배열과 링크드 리스트의 가장 큰 차이는 삽입과 삭제를 할 때 이루어지는 것 같다.</p>\n<p>어느 특정 위치에 삽입하는 경우 배열은 삽입 후 뒤의 배열을 붙이는 식으로 계산을 해야해서 오래걸리는 것 같고, 지우는 것도 해당 인덱스의 값이 없어지면 뒤에 있는 배열을 모두 땡겨줘야하기 때문에 오래걸린다.</p>\n<p>하지만, 링크드 리스트의 경우 삽입 , 삭제 후 앞 뒤의 데이터의 이동 없이 연결만 시켜주면 되기 때문에 시간이 더 적게 걸린다.</p>\n<p>데이터가 맨 끝에 삽입되고 삭제되는 경우가 아니라면, 보통의 경우 링크드 리스트가 훨씬 빠를 것 같다.</p>\n</li>\n<li>\n<p>링크드 리스트에 추가할 때 걸리는 시간 복잡도는 방법에 따라 차이가 있다.</p>\n<ol>\n<li>\n<p>맨 마지막에 추가하는 경우.</p>\n<p>tail 변수를 둬서 맨 마지막에 있는 node만 알고있다면 O(1)밖에 걸리지 않는다.</p>\n</li>\n<li>\n<p>중간에 추가하는 경우.</p>\n<p>head부터 모두 살펴봐야하기 때문에 O(N)만큼 걸린다.</p>\n</li>\n<li>\n<p>맨 앞에 추가하는 경우</p>\n<p>head에 추가하고 연결해주기 때문에 O(1)만큼 걸린다.</p>\n</li>\n</ol>\n</li>\n<li>\n<p>링크드 리스트에서의 탐색과 삭제.</p>\n<p>특별히 탐색과 삭제는 탐색 후 삭제해야하기 때문에 O(N)만큼 걸리는 것 같다.</p>\n<p>하지만 추가의 경우와 같이 head,tail이 존재한다면 맨 앞과 맨 뒤의 삭제시간은 O(1)이다.</p>\n</li>\n</ul>","frontmatter":{"title":"복잡도와 LinkedList","date":"2020년 07월 29일, 21:40"}}},"pageContext":{"slug":"/10/post90/","previous":{"fields":{"slug":"/9/post89/"},"frontmatter":{"title":"Git과 명령어","path":"/posts/89"}},"next":null}}}