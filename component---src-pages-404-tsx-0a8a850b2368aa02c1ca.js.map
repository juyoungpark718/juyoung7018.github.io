{"version":3,"file":"component---src-pages-404-tsx-0a8a850b2368aa02c1ca.js","mappings":"uKAYA,SAASA,EAAI,GAUT,IAVS,YACXC,EAAW,KACXC,EAAI,KACJC,EAAI,MACJC,GAMD,EACC,MAAM,KAAEC,IAASC,EAAAA,EAAAA,gBAAe,YAc1BC,EAAkBN,GAAeI,EAAKG,aAAaP,YAEzD,OACEQ,EAAAA,cAAAA,EAAAA,SAAAA,KAEEA,EAAAA,cAACC,EAAAA,EAAM,CACLC,eAAgB,CACdT,QAEFE,MAAOA,EACPQ,cAAa,QAAUP,EAAKG,aAAaJ,MACzCD,KAAM,CACJ,CACEU,KAAK,cACLC,QAASP,GAEX,CACEQ,SAAS,WACTD,QAASV,GAEX,CACEW,SAAS,iBACTD,QAASP,GAEX,CACEQ,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAAST,EAAKG,aAAaQ,QAE7B,CACEH,KAAK,gBACLC,QAASV,GAEX,CACES,KAAK,sBACLC,QAASP,IAEXU,OAAOd,KAIjB,CAEAH,EAAIkB,aAAe,CACjBhB,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd,K,gECvFA,UARqB,IACnBQ,EAAAA,cAACU,EAAAA,EAAM,KACLV,EAAAA,cAACT,EAAAA,EAAG,CAACI,MAAM,mBACXK,EAAAA,cAAAA,KAAAA,KAAAA,aACAA,EAAAA,cAAAA,IAAAA,KAAAA,2D","sources":["webpack://gatsby-starter-default/./src/components/seo.tsx","webpack://gatsby-starter-default/./src/pages/404.tsx"],"sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({\n  description,\n  lang,\n  meta,\n  title,\n}: {\n  description: any;\n  lang: any;\n  meta: any;\n  title: any;\n}) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <>\n      {/* @ts-ignore */}\n      <Helmet\n        htmlAttributes={{\n          lang,\n        }}\n        title={title}\n        titleTemplate={`%s | ${site.siteMetadata.title}`}\n        meta={[\n          {\n            name: `description`,\n            content: metaDescription,\n          },\n          {\n            property: `og:title`,\n            content: title,\n          },\n          {\n            property: `og:description`,\n            content: metaDescription,\n          },\n          {\n            property: `og:type`,\n            content: `website`,\n          },\n          {\n            name: `twitter:card`,\n            content: `summary`,\n          },\n          {\n            name: `twitter:creator`,\n            content: site.siteMetadata.author,\n          },\n          {\n            name: `twitter:title`,\n            content: title,\n          },\n          {\n            name: `twitter:description`,\n            content: metaDescription,\n          },\n        ].concat(meta)}\n      />\n    </>\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from \"react\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n"],"names":["SEO","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","React","Helmet","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Layout"],"sourceRoot":""}