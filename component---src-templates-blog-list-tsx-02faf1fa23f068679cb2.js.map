{"version":3,"file":"component---src-templates-blog-list-tsx-02faf1fa23f068679cb2.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/BlogListItem.tsx","webpack://gatsby-starter-default/./src/components/BlogListComponent.tsx","webpack://gatsby-starter-default/./src/components/header.tsx","webpack://gatsby-starter-default/./src/components/layout.tsx","webpack://gatsby-starter-default/./src/components/shared/colorModeHelper.ts","webpack://gatsby-starter-default/./src/components/shared/_variables.ts","webpack://gatsby-starter-default/./src/components/shared/_respondTo.ts","webpack://gatsby-starter-default/./src/templates/BlogList.tsx","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ThumbnailWrapper = styled.div`\n  flex: 1;\n`;\n\nconst NoImageTitle = styled.div`\n  display: flex;\n  font-size: 24px;\n  font-weight: 500;\n  background-color: var(--pre);\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  border-radius: 8px 8px 0 0;\n`;\n\nconst ContentWrapper = styled.div`\n  padding: 18px;\n  background-color: #2c2c2c;\n  border-radius: 0 0 8px 8px;\n`;\n\nconst ContentTitle = styled.h3`\n  font-size: 20px;\n  margin-top: 4px;\n`;\n\nconst ContentDescription = styled.p`\n  font-size: 14px;\n  padding: 8px 0;\n  word-wrap: break-word;\n  word-break: keep-all;\n`;\n\nconst ContentDate = styled.span`\n  font-size: 12px;\n  color: #8c8c8c;\n`;\n\ntype Props = {\n  title: string;\n  date: string;\n  tags: string[];\n  description?: string;\n};\n\nconst BlogListItem = (props: Props) => {\n  const { title, date, tags, description } = props;\n\n  return (\n    <Container>\n      <ThumbnailWrapper>\n        <NoImageTitle>\n          {title.length > 20 ? `${title.slice(0, 20)}...` : title}\n        </NoImageTitle>\n        {/* <img alt=\"이미지 들어갈 자리\" /> */}\n      </ThumbnailWrapper>\n      <ContentWrapper>\n        {/* <div>{tags.join(\",\")}</div> */}\n        <div>\n          <ContentTitle>{title}</ContentTitle>\n          <ContentDescription>\n            {description && description.length > 60\n              ? `${description.slice(0, 61)}...`\n              : description}\n          </ContentDescription>\n          <ContentDate>{date}</ContentDate>\n        </div>\n      </ContentWrapper>\n    </Container>\n  );\n};\n\nexport default BlogListItem;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\nimport { respondTo } from \"./shared/_respondTo\";\nimport BlogListItem from \"./BlogListItem\";\n\nconst BlogListContainer = styled.div`\n  width: 960px;\n  min-height: 600px;\n  ${respondTo.md`\n    width: 100%;\n    max-width:100%;\n  `}\n`;\n\nconst BlogListContent = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 36px;\n  padding: 0 16px;\n  ${respondTo.sm`\n    grid-template-columns: 1fr;\n  `}\n`;\n\nconst BlogPagination = styled.div`\n  margin: 8px 0px;\n`;\n\nconst PageNavLink = styled(Link)`\n  margin: 0px 8px;\n  :first-child {\n    margin: 0;\n    margin-right: 8px;\n  }\n\n  :last-child {\n    margin: 0;\n    margin-left: 8px;\n  }\n`;\n\nexport default function BlogListComponent(props: any) {\n  const pagination = props.pagination;\n\n  return (\n    <BlogListContainer>\n      <BlogListContent>\n        {props.posts.map(({ node }: { node: any }) => {\n          const title = node.frontmatter.title || \"TBD\";\n          const date = node.frontmatter.date;\n          const tags = node.frontmatter.tags;\n          const desc = node.frontmatter.desc;\n\n          return (\n            <Link key={node.fields.slug} to={node.frontmatter.path}>\n              <BlogListItem\n                title={title}\n                date={date}\n                tags={tags}\n                description={desc}\n              />\n            </Link>\n          );\n        })}\n      </BlogListContent>\n      <BlogPagination>\n        {pagination\n          ? pagination.numPages > 1\n            ? Array(pagination.numPages)\n                .fill(0)\n                .map((_, idx) => (\n                  <PageNavLink\n                    key={idx + 1}\n                    to={idx === 0 ? `/blog` : `/blog/${idx + 1}`}\n                  >\n                    {idx + 1}\n                  </PageNavLink>\n                ))\n            : null\n          : null}\n      </BlogPagination>\n    </BlogListContainer>\n  );\n}\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { respondTo } from \"./shared/_respondTo\";\n\nconst HeaderContainer = styled.header`\n  ${respondTo.md`\n    margin-bottom:0;\n    padding: 0 16px;\n  `}\n`;\n\nconst HeaderContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  min-height: 10vh;\n  max-width: 960px;\n  ${respondTo.xs`\n    width:100%;\n  `}\n\n  a {\n    color: var(--fontColor);\n    text-decoration: none;\n  }\n\n  h1 {\n    font-size: 28px;\n  }\n\n  ul {\n    li {\n      float: left;\n      margin-right: 8px;\n      &:last-child {\n        margin: 0;\n      }\n    }\n  }\n`;\n\ntype Props = {\n  siteTitle: string;\n};\n\nconst Header = (props: Props) => {\n  const { siteTitle } = props;\n\n  return (\n    <HeaderContainer>\n      <HeaderContent>\n        <div>\n          <Link to=\"/\">\n            <h1>{siteTitle}</h1>\n          </Link>\n        </div>\n        <div>\n          <ul>\n            <Link to=\"/\">\n              <li>ABOUT</li>\n            </Link>\n          </ul>\n        </div>\n      </HeaderContent>\n    </HeaderContainer>\n  );\n};\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nimport Header from \"./header\";\nimport styled from \"styled-components\";\nimport { respondTo } from \"./shared/_respondTo\";\nimport { setTheme } from \"./shared/colorModeHelper\";\n\nconst LayoutContainer = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  ${respondTo.md`\n    width: 100%;\n  `}\n`;\n\nconst LayoutMain = styled.main`\n  min-height: 85vh;\n  margin-bottom: 24px;\n`;\n\nconst LayoutFooter = styled.footer`\n  min-height: 5vh;\n  ${respondTo.md`\n    padding: 0 16px;\n  `}\n  bottom: 0;\n`;\n\nconst Layout = ({ children }: { children: any }) => {\n  useEffect(() => {\n    setTheme(\"dark\");\n  }, []);\n\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n  return (\n    <LayoutContainer>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <LayoutMain>{children}</LayoutMain>\n      <LayoutFooter>\n        © 2020, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n      </LayoutFooter>\n    </LayoutContainer>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","export type ColorMode = \"dark\" | \"light\";\n\nexport const setTheme = (theme: ColorMode) => {\n  document.documentElement.setAttribute(\"data-theme\", theme);\n  localStorage.setItem(\"theme\", theme);\n};\n\nconst isTheme = (theme: unknown): theme is ColorMode => {\n  if (theme === \"dark\" || theme === \"light\") {\n    return true;\n  }\n\n  return false;\n};\n\nconst getSystemTheme = () => {\n  const isDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n\n  if (isDark) {\n    return \"dark\";\n  }\n\n  return \"light\";\n};\n\nexport const getColorMode = () => {\n  const theme = localStorage.getItem(\"theme\");\n\n  if (!theme || !isTheme(theme)) {\n    return getSystemTheme();\n  }\n\n  return theme;\n};\n","export const breakpoints = {\n  xs: \"480px\",\n  sm: \"768px\",\n  md: \"992px\",\n  lg: \"1200px\",\n};\n","import { breakpoints } from \"./_variables\";\nimport { css } from \"styled-components\";\n\ntype MediaQuery = Record<\n  keyof typeof breakpoints,\n  (...args) => ReturnType<css>\n>;\n\nexport const respondTo = Object.keys(breakpoints).reduce((acc, label) => {\n  acc[label] = (...args) => css`\n    @media screen and (max-width: ${breakpoints[label]}) {\n      ${css(...args)}\n    }\n  `;\n  return acc;\n}, {}) as MediaQuery;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport BlogListComponent from \"../components/BlogListComponent\";\n\ninterface Props {\n  data: {\n    allMarkdownRemark: {\n      edges: any;\n    };\n  };\n  pageContext: any;\n}\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { frontmatter: { date: DESC } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            path\n            date\n            tags\n            desc\n          }\n        }\n      }\n      group(field: { frontmatter: { tags: SELECT } }) {\n        tag: fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n\nconst BlogList = (props: Props) => {\n  const posts = props.data.allMarkdownRemark.edges;\n  const pagination = props.pageContext;\n\n  return (\n    <Layout>\n      <BlogListComponent posts={posts} pagination={pagination} />\n    </Layout>\n  );\n};\n\nexport default BlogList;\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  strings.raw = raw;\n  return strings;\n}"],"names":["Container","styled","ThumbnailWrapper","NoImageTitle","ContentWrapper","ContentTitle","ContentDescription","ContentDate","props","title","date","tags","description","React","length","slice","BlogListContainer","respondTo","BlogListContent","BlogPagination","PageNavLink","Link","BlogListComponent","pagination","posts","map","_ref","node","frontmatter","desc","key","fields","slug","to","path","BlogListItem","numPages","Array","fill","_","idx","HeaderContainer","HeaderContent","siteTitle","LayoutContainer","LayoutMain","LayoutFooter","children","useEffect","theme","document","documentElement","setAttribute","localStorage","setItem","data","useStaticQuery","Header","site","siteMetadata","href","breakpoints","xs","sm","md","lg","Object","keys","reduce","acc","label","css","allMarkdownRemark","edges","pageContext","Layout","_taggedTemplateLiteralLoose","strings","raw"],"sourceRoot":""}