{"version":3,"sources":["webpack:///./src/templates/blogListTemplate.js","webpack:///./src/components/BlogListComponent.js"],"names":["BlogList","render","posts","this","props","data","allMarkdownRemark","edges","pagination","pageContext","React","Component","BlogListContainer","styled","div","respondTo","md","BlogListContent","BlogPost","BlogTitle","span","BlogDate","BlogPagination","PageNavLink","Link","BlogListComponent","map","node","title","frontmatter","fields","slug","key","to","path","date","split","numPages","Array","fill","_","idx"],"mappings":"yMAKqBA,E,kGACnBC,OAAA,WACE,IAAMC,EAAQC,KAAKC,MAAMC,KAAKC,kBAAkBC,MAC1CC,EAAaL,KAAKC,MAAMK,YAE9B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAmBP,MAAOA,EAAOM,WAAYA,M,GAPfE,IAAMC,Y,iJCAtCC,EAAoBC,IAAOC,IAAV,2FAAGD,CAAH,uDAInBE,IAAUC,GAJS,sEAUjBC,EAAkBJ,IAAOC,IAAV,yFAAGD,CAAH,yCAKfK,EAAWL,IAAOC,IAAV,kFAAGD,CAAH,mDAGVE,IAAUC,GAHA,yGAURG,EAAYN,IAAOO,KAAV,mFAAGP,CAAH,MAETQ,EAAWR,IAAOO,KAAV,kFAAGP,CAAH,MAERS,EAAiBT,IAAOC,IAAV,wFAAGD,CAAH,qBAIdU,EAAcV,YAAOW,QAAV,qFAAGX,CAAH,mGAaF,SAASY,EAAkBrB,GACxC,IAAMI,EAAaJ,EAAMI,WAEzB,OACE,kBAACI,EAAD,KACE,kBAACK,EAAD,KACGb,EAAMF,MAAMwB,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACZC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KACpD,OACE,kBAAC,OAAD,CAAMC,IAAKL,EAAKG,OAAOC,KAAME,GAAIN,EAAKE,YAAYK,MAChD,kBAAChB,EAAD,KACE,kBAACC,EAAD,QAAeS,GACf,kBAACP,EAAD,KAAWM,EAAKE,YAAYM,KAAKC,MAAM,KAAK,UAMtD,kBAACd,EAAD,KACGd,GACGA,EAAW6B,SAAW,EACpBC,MAAM9B,EAAW6B,UACdE,KAAK,GACLb,KAAI,SAACc,EAAGC,GAAJ,OACH,kBAAClB,EAAD,CACES,IAAKS,EAAM,EACXR,GAAY,IAARQ,EAAA,kBAA+BA,EAAM,IAExCA,EAAM,MAIf","file":"component---src-templates-blog-list-template-js-ad4c7d424932e3fead48.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport BlogListComponent from \"../components/BlogListComponent\";\n\nexport default class BlogList extends React.Component {\n  render() {\n    const posts = this.props.data.allMarkdownRemark.edges;\n    const pagination = this.props.pageContext;\n\n    return (\n      <Layout>\n        <BlogListComponent posts={posts} pagination={pagination} />\n      </Layout>\n    );\n  }\n}\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            path\n            date\n            tags\n          }\n        }\n      }\n      group(field: frontmatter___tags) {\n        tag: fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\nimport { respondTo } from \"./shared/_respondTo\";\n\nconst BlogListContainer = styled.div`\n  width: 1024px;\n  max-width: 1024px;\n  min-height: 600px;\n  ${respondTo.md`\n    width: 100%;\n    max-width:100%;\n  `}\n`;\n\nconst BlogListContent = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst BlogPost = styled.div`\n  display: flex;\n  justify-content: space-between;\n  ${respondTo.md` \n    flex-direction: column;\n    max-width:100%;\n    padding:0.5rem 0;\n  `}\n`;\n\nconst BlogTitle = styled.span``;\n\nconst BlogDate = styled.span``;\n\nconst BlogPagination = styled.div`\n  margin: 8px 0px;\n`;\n\nconst PageNavLink = styled(Link)`\n  margin: 0px 8px;\n  :first-child {\n    margin: 0;\n    margin-right: 8px;\n  }\n\n  :last-child {\n    margin: 0;\n    margin-left: 8px;\n  }\n`;\n\nexport default function BlogListComponent(props) {\n  const pagination = props.pagination;\n\n  return (\n    <BlogListContainer>\n      <BlogListContent>\n        {props.posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug;\n          return (\n            <Link key={node.fields.slug} to={node.frontmatter.path}>\n              <BlogPost>\n                <BlogTitle>{`${title}`}</BlogTitle>\n                <BlogDate>{node.frontmatter.date.split(\" \")[0]}</BlogDate>\n              </BlogPost>\n            </Link>\n          );\n        })}\n      </BlogListContent>\n      <BlogPagination>\n        {pagination\n          ? pagination.numPages > 1\n            ? Array(pagination.numPages)\n                .fill(0)\n                .map((_, idx) => (\n                  <PageNavLink\n                    key={idx + 1}\n                    to={idx === 0 ? `/blog` : `/blog/${idx + 1}`}\n                  >\n                    {idx + 1}\n                  </PageNavLink>\n                ))\n            : null\n          : null}\n      </BlogPagination>\n    </BlogListContainer>\n  );\n}\n"],"sourceRoot":""}