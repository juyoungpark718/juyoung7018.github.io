{"version":3,"sources":["webpack:///./src/templates/blogTemplate.js"],"names":["BlogContainer","styled","div","BlogPost","BlogHeader","BlogTitle","h1","BlogDate","h5","BlogPostContent","BlogPagination","Template","data","pageContext","markdownRemark","frontmatter","html","next","previous","title","date","dangerouslySetInnerHTML","__html","to","path","pageQuery"],"mappings":"2FAAA,0IAIMA,EAAgBC,IAAOC,IAAV,kFAAGD,CAAH,wBAIbE,EAAWF,IAAOC,IAAV,6EAAGD,CAAH,8GASRG,EAAaH,IAAOC,IAAV,+EAAGD,CAAH,kGAQVI,EAAYJ,IAAOK,GAAV,8EAAGL,CAAH,MAETM,EAAWN,IAAOO,GAAV,6EAAGP,CAAH,MAERQ,EAAkBR,IAAOC,IAAV,oFAAGD,CAAH,sBAIfS,EAAiBT,IAAOC,IAAV,mFAAGD,CAAH,sBAIL,SAASU,EAAT,GAGX,IAFFC,EAEC,EAFDA,KACAC,EACC,EADDA,YAEQC,EAAmBF,EAAnBE,eACAC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACbC,EAAmBJ,EAAnBI,KAAMC,EAAaL,EAAbK,SAEd,OACE,kBAAClB,EAAD,KACE,kBAACG,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,KAAYU,EAAYI,OACxB,kBAACZ,EAAD,KAAWQ,EAAYK,OAEzB,kBAACX,EAAD,CAAiBY,wBAAyB,CAAEC,OAAQN,KACpD,kBAACN,EAAD,KACGQ,EACC,kBAAC,OAAD,CAAMK,GAAIL,EAASH,YAAYS,MAC5BN,EAASH,YAAYI,OAEtB,KACHF,EACC,kBAAC,OAAD,CAAMM,GAAIN,EAAKF,YAAYS,MAAOP,EAAKF,YAAYI,OACjD,QAOP,IAAMM,EAAS","file":"component---src-templates-blog-template-js-07cc5522967b462ea91e.js","sourcesContent":["import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst BlogContainer = styled.div`\n  padding: 3rem 0rem;\n`;\n\nconst BlogPost = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 1024px;\n  margin: 0 auto;\n`;\n\nconst BlogHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 3rem 0;\n`;\n\nconst BlogTitle = styled.h1``;\n\nconst BlogDate = styled.h5``;\n\nconst BlogPostContent = styled.div`\n  min-width: 960px;\n`;\n\nconst BlogPagination = styled.div`\n  margin-top: 3rem;\n`;\n\nexport default function Template({\n  data,\n  pageContext, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data; // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark;\n  const { next, previous } = pageContext;\n\n  return (\n    <BlogContainer>\n      <BlogPost>\n        <BlogHeader>\n          <BlogTitle>{frontmatter.title}</BlogTitle>\n          <BlogDate>{frontmatter.date}</BlogDate>\n        </BlogHeader>\n        <BlogPostContent dangerouslySetInnerHTML={{ __html: html }} />\n        <BlogPagination>\n          {previous ? (\n            <Link to={previous.frontmatter.path}>\n              {previous.frontmatter.title}\n            </Link>\n          ) : null}\n          {next ? (\n            <Link to={next.frontmatter.path}>{next.frontmatter.title}</Link>\n          ) : null}\n        </BlogPagination>\n      </BlogPost>\n    </BlogContainer>\n  );\n}\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"YYYY년 MM월 DD일\")\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}