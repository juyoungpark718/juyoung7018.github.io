{"version":3,"sources":["webpack:///./src/templates/blogListTemplate.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.array.fill.js","webpack:///./src/components/BlogListComponent.js"],"names":["BlogList","render","posts","this","props","data","allMarkdownRemark","edges","pagination","pageContext","React","Component","blogListQuery","$export","P","fill","BlogListContainer","styled","div","respondTo","xs","BlogListContent","BlogPagination","BlogPost","BlogTitle","span","BlogDate","BlogListComponent","map","index","node","title","frontmatter","fields","slug","key","to","path","date","split","numPages","Array","e","idx"],"mappings":"+OAKqBA,E,gLACnBC,OAAA,WACE,IAAMC,EAAQC,KAAKC,MAAMC,KAAKC,kBAAkBC,MAC1CC,EAAaL,KAAKC,MAAMK,YAE9B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAmBP,MAAOA,EAAOM,WAAYA,M,GAPfE,IAAMC,WAa/BC,EAAa,c,qBCjB1B,IAAIC,EAAU,EAAQ,QAEtBA,EAAQA,EAAQC,EAAG,QAAS,CAAEC,KAAM,EAAQ,UAE5C,EAAQ,OAAR,CAAiC,S,kaCAjC,IAAMC,EAAoBC,IAAOC,IAAV,2FAAGD,CAAH,uDAInBE,IAAUC,GAJS,MAUjBC,EAAkBJ,IAAOC,IAAV,yFAAGD,CAAH,yCAKfK,EAAiBL,IAAOC,IAAV,wFAAGD,CAAH,MAEdM,EAAWN,IAAOC,IAAV,kFAAGD,CAAH,mDAGVE,IAAUC,GAHA,MASRI,EAAYP,IAAOQ,KAAV,mFAAGR,CAAH,MAETS,EAAWT,IAAOQ,KAAV,kFAAGR,CAAH,MAEC,SAASU,EAAkBvB,GACxC,IAAMI,EAAaJ,EAAMI,WACzB,OACE,kBAACQ,EAAD,KACE,kBAACK,EAAD,KACGjB,EAAMF,MAAM0B,KAAI,WAAWC,GAAW,IAAnBC,EAAkB,EAAlBA,KACZC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KACpD,OACE,kBAAC,OAAD,CAAMC,IAAKL,EAAKG,OAAOC,KAAME,GAAIN,EAAKE,YAAYK,MAChD,kBAACd,EAAD,KACE,kBAACC,EAAD,QAAeO,GACf,kBAACL,EAAD,KAAWI,EAAKE,YAAYM,KAAKC,MAAM,KAAK,UAMtD,kBAACjB,EAAD,KACGd,GACGA,EAAWgC,SAAW,EACpBC,MAAMjC,EAAWgC,UACdzB,KAAK,GACLa,KAAI,SAACc,EAAGC,GAAJ,OACH,kBAAC,OAAD,CACER,IAAKQ,EAAM,EACXP,GAAY,IAARO,EAAA,kBAA+BA,EAAM,IAExCA,EAAM,MAIf","file":"component---src-templates-blog-list-template-js-87f0fa9eda45024e84dd.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport BlogListComponent from \"../components/BlogListComponent\";\n\nexport default class BlogList extends React.Component {\n  render() {\n    const posts = this.props.data.allMarkdownRemark.edges;\n    const pagination = this.props.pageContext;\n\n    return (\n      <Layout>\n        <BlogListComponent posts={posts} pagination={pagination} />\n      </Layout>\n    );\n  }\n}\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            path\n            date\n            tags\n          }\n        }\n      }\n      group(field: frontmatter___tags) {\n        tag: fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\nimport { respondTo } from \"./shared/_respondTo\";\n\nconst BlogListContainer = styled.div`\n  width: 1024px;\n  max-width:1024px;\n  min-height: 600px;\n  ${respondTo.xs`\n    width: 100%;\n    max-width:100%;\n  `}\n`;\n\nconst BlogListContent = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst BlogPagination = styled.div``;\n\nconst BlogPost = styled.div`\n  display: flex;\n  justify-content: space-between;\n  ${respondTo.xs` \n    flex-direction: column;\n    padding:0.5rem 0;\n  `}\n`;\n\nconst BlogTitle = styled.span``;\n\nconst BlogDate = styled.span``;\n\nexport default function BlogListComponent(props) {\n  const pagination = props.pagination;\n  return (\n    <BlogListContainer>\n      <BlogListContent>\n        {props.posts.map(({ node }, index) => {\n          const title = node.frontmatter.title || node.fields.slug;\n          return (\n            <Link key={node.fields.slug} to={node.frontmatter.path}>\n              <BlogPost>\n                <BlogTitle>{`${title}`}</BlogTitle>\n                <BlogDate>{node.frontmatter.date.split(\" \")[0]}</BlogDate>\n              </BlogPost>\n            </Link>\n          );\n        })}\n      </BlogListContent>\n      <BlogPagination>\n        {pagination\n          ? pagination.numPages > 1\n            ? Array(pagination.numPages)\n                .fill(0)\n                .map((e, idx) => (\n                  <Link\n                    key={idx + 1}\n                    to={idx === 0 ? `/blog` : `/blog/${idx + 1}`}\n                  >\n                    {idx + 1}\n                  </Link>\n                ))\n            : null\n          : null}\n      </BlogPagination>\n    </BlogListContainer>\n  );\n}\n"],"sourceRoot":""}